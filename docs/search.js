window.pdocSearch = (function(){
/** elasticlunr - http://weixsong.github.io * Copyright (C) 2017 Oliver Nightingale * Copyright (C) 2017 Wei Song * MIT Licensed */!function(){function e(e){if(null===e||"object"!=typeof e)return e;var t=e.constructor();for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n]);return t}var t=function(e){var n=new t.Index;return n.pipeline.add(t.trimmer,t.stopWordFilter,t.stemmer),e&&e.call(n,n),n};t.version="0.9.5",lunr=t,t.utils={},t.utils.warn=function(e){return function(t){e.console&&console.warn&&console.warn(t)}}(this),t.utils.toString=function(e){return void 0===e||null===e?"":e.toString()},t.EventEmitter=function(){this.events={}},t.EventEmitter.prototype.addListener=function(){var e=Array.prototype.slice.call(arguments),t=e.pop(),n=e;if("function"!=typeof t)throw new TypeError("last argument must be a function");n.forEach(function(e){this.hasHandler(e)||(this.events[e]=[]),this.events[e].push(t)},this)},t.EventEmitter.prototype.removeListener=function(e,t){if(this.hasHandler(e)){var n=this.events[e].indexOf(t);-1!==n&&(this.events[e].splice(n,1),0==this.events[e].length&&delete this.events[e])}},t.EventEmitter.prototype.emit=function(e){if(this.hasHandler(e)){var t=Array.prototype.slice.call(arguments,1);this.events[e].forEach(function(e){e.apply(void 0,t)},this)}},t.EventEmitter.prototype.hasHandler=function(e){return e in this.events},t.tokenizer=function(e){if(!arguments.length||null===e||void 0===e)return[];if(Array.isArray(e)){var n=e.filter(function(e){return null===e||void 0===e?!1:!0});n=n.map(function(e){return t.utils.toString(e).toLowerCase()});var i=[];return n.forEach(function(e){var n=e.split(t.tokenizer.seperator);i=i.concat(n)},this),i}return e.toString().trim().toLowerCase().split(t.tokenizer.seperator)},t.tokenizer.defaultSeperator=/[\s\-]+/,t.tokenizer.seperator=t.tokenizer.defaultSeperator,t.tokenizer.setSeperator=function(e){null!==e&&void 0!==e&&"object"==typeof e&&(t.tokenizer.seperator=e)},t.tokenizer.resetSeperator=function(){t.tokenizer.seperator=t.tokenizer.defaultSeperator},t.tokenizer.getSeperator=function(){return t.tokenizer.seperator},t.Pipeline=function(){this._queue=[]},t.Pipeline.registeredFunctions={},t.Pipeline.registerFunction=function(e,n){n in t.Pipeline.registeredFunctions&&t.utils.warn("Overwriting existing registered function: "+n),e.label=n,t.Pipeline.registeredFunctions[n]=e},t.Pipeline.getRegisteredFunction=function(e){return e in t.Pipeline.registeredFunctions!=!0?null:t.Pipeline.registeredFunctions[e]},t.Pipeline.warnIfFunctionNotRegistered=function(e){var n=e.label&&e.label in this.registeredFunctions;n||t.utils.warn("Function is not registered with pipeline. This may cause problems when serialising the index.\n",e)},t.Pipeline.load=function(e){var n=new t.Pipeline;return e.forEach(function(e){var i=t.Pipeline.getRegisteredFunction(e);if(!i)throw new Error("Cannot load un-registered function: "+e);n.add(i)}),n},t.Pipeline.prototype.add=function(){var e=Array.prototype.slice.call(arguments);e.forEach(function(e){t.Pipeline.warnIfFunctionNotRegistered(e),this._queue.push(e)},this)},t.Pipeline.prototype.after=function(e,n){t.Pipeline.warnIfFunctionNotRegistered(n);var i=this._queue.indexOf(e);if(-1===i)throw new Error("Cannot find existingFn");this._queue.splice(i+1,0,n)},t.Pipeline.prototype.before=function(e,n){t.Pipeline.warnIfFunctionNotRegistered(n);var i=this._queue.indexOf(e);if(-1===i)throw new Error("Cannot find existingFn");this._queue.splice(i,0,n)},t.Pipeline.prototype.remove=function(e){var t=this._queue.indexOf(e);-1!==t&&this._queue.splice(t,1)},t.Pipeline.prototype.run=function(e){for(var t=[],n=e.length,i=this._queue.length,o=0;n>o;o++){for(var r=e[o],s=0;i>s&&(r=this._queue[s](r,o,e),void 0!==r&&null!==r);s++);void 0!==r&&null!==r&&t.push(r)}return t},t.Pipeline.prototype.reset=function(){this._queue=[]},t.Pipeline.prototype.get=function(){return this._queue},t.Pipeline.prototype.toJSON=function(){return this._queue.map(function(e){return t.Pipeline.warnIfFunctionNotRegistered(e),e.label})},t.Index=function(){this._fields=[],this._ref="id",this.pipeline=new t.Pipeline,this.documentStore=new t.DocumentStore,this.index={},this.eventEmitter=new t.EventEmitter,this._idfCache={},this.on("add","remove","update",function(){this._idfCache={}}.bind(this))},t.Index.prototype.on=function(){var e=Array.prototype.slice.call(arguments);return this.eventEmitter.addListener.apply(this.eventEmitter,e)},t.Index.prototype.off=function(e,t){return this.eventEmitter.removeListener(e,t)},t.Index.load=function(e){e.version!==t.version&&t.utils.warn("version mismatch: current "+t.version+" importing "+e.version);var n=new this;n._fields=e.fields,n._ref=e.ref,n.documentStore=t.DocumentStore.load(e.documentStore),n.pipeline=t.Pipeline.load(e.pipeline),n.index={};for(var i in e.index)n.index[i]=t.InvertedIndex.load(e.index[i]);return n},t.Index.prototype.addField=function(e){return this._fields.push(e),this.index[e]=new t.InvertedIndex,this},t.Index.prototype.setRef=function(e){return this._ref=e,this},t.Index.prototype.saveDocument=function(e){return this.documentStore=new t.DocumentStore(e),this},t.Index.prototype.addDoc=function(e,n){if(e){var n=void 0===n?!0:n,i=e[this._ref];this.documentStore.addDoc(i,e),this._fields.forEach(function(n){var o=this.pipeline.run(t.tokenizer(e[n]));this.documentStore.addFieldLength(i,n,o.length);var r={};o.forEach(function(e){e in r?r[e]+=1:r[e]=1},this);for(var s in r){var u=r[s];u=Math.sqrt(u),this.index[n].addToken(s,{ref:i,tf:u})}},this),n&&this.eventEmitter.emit("add",e,this)}},t.Index.prototype.removeDocByRef=function(e){if(e&&this.documentStore.isDocStored()!==!1&&this.documentStore.hasDoc(e)){var t=this.documentStore.getDoc(e);this.removeDoc(t,!1)}},t.Index.prototype.removeDoc=function(e,n){if(e){var n=void 0===n?!0:n,i=e[this._ref];this.documentStore.hasDoc(i)&&(this.documentStore.removeDoc(i),this._fields.forEach(function(n){var o=this.pipeline.run(t.tokenizer(e[n]));o.forEach(function(e){this.index[n].removeToken(e,i)},this)},this),n&&this.eventEmitter.emit("remove",e,this))}},t.Index.prototype.updateDoc=function(e,t){var t=void 0===t?!0:t;this.removeDocByRef(e[this._ref],!1),this.addDoc(e,!1),t&&this.eventEmitter.emit("update",e,this)},t.Index.prototype.idf=function(e,t){var n="@"+t+"/"+e;if(Object.prototype.hasOwnProperty.call(this._idfCache,n))return this._idfCache[n];var i=this.index[t].getDocFreq(e),o=1+Math.log(this.documentStore.length/(i+1));return this._idfCache[n]=o,o},t.Index.prototype.getFields=function(){return this._fields.slice()},t.Index.prototype.search=function(e,n){if(!e)return[];e="string"==typeof e?{any:e}:JSON.parse(JSON.stringify(e));var i=null;null!=n&&(i=JSON.stringify(n));for(var o=new t.Configuration(i,this.getFields()).get(),r={},s=Object.keys(e),u=0;u<s.length;u++){var a=s[u];r[a]=this.pipeline.run(t.tokenizer(e[a]))}var l={};for(var c in o){var d=r[c]||r.any;if(d){var f=this.fieldSearch(d,c,o),h=o[c].boost;for(var p in f)f[p]=f[p]*h;for(var p in f)p in l?l[p]+=f[p]:l[p]=f[p]}}var v,g=[];for(var p in l)v={ref:p,score:l[p]},this.documentStore.hasDoc(p)&&(v.doc=this.documentStore.getDoc(p)),g.push(v);return g.sort(function(e,t){return t.score-e.score}),g},t.Index.prototype.fieldSearch=function(e,t,n){var i=n[t].bool,o=n[t].expand,r=n[t].boost,s=null,u={};return 0!==r?(e.forEach(function(e){var n=[e];1==o&&(n=this.index[t].expandToken(e));var r={};n.forEach(function(n){var o=this.index[t].getDocs(n),a=this.idf(n,t);if(s&&"AND"==i){var l={};for(var c in s)c in o&&(l[c]=o[c]);o=l}n==e&&this.fieldSearchStats(u,n,o);for(var c in o){var d=this.index[t].getTermFrequency(n,c),f=this.documentStore.getFieldLength(c,t),h=1;0!=f&&(h=1/Math.sqrt(f));var p=1;n!=e&&(p=.15*(1-(n.length-e.length)/n.length));var v=d*a*h*p;c in r?r[c]+=v:r[c]=v}},this),s=this.mergeScores(s,r,i)},this),s=this.coordNorm(s,u,e.length)):void 0},t.Index.prototype.mergeScores=function(e,t,n){if(!e)return t;if("AND"==n){var i={};for(var o in t)o in e&&(i[o]=e[o]+t[o]);return i}for(var o in t)o in e?e[o]+=t[o]:e[o]=t[o];return e},t.Index.prototype.fieldSearchStats=function(e,t,n){for(var i in n)i in e?e[i].push(t):e[i]=[t]},t.Index.prototype.coordNorm=function(e,t,n){for(var i in e)if(i in t){var o=t[i].length;e[i]=e[i]*o/n}return e},t.Index.prototype.toJSON=function(){var e={};return this._fields.forEach(function(t){e[t]=this.index[t].toJSON()},this),{version:t.version,fields:this._fields,ref:this._ref,documentStore:this.documentStore.toJSON(),index:e,pipeline:this.pipeline.toJSON()}},t.Index.prototype.use=function(e){var t=Array.prototype.slice.call(arguments,1);t.unshift(this),e.apply(this,t)},t.DocumentStore=function(e){this._save=null===e||void 0===e?!0:e,this.docs={},this.docInfo={},this.length=0},t.DocumentStore.load=function(e){var t=new this;return t.length=e.length,t.docs=e.docs,t.docInfo=e.docInfo,t._save=e.save,t},t.DocumentStore.prototype.isDocStored=function(){return this._save},t.DocumentStore.prototype.addDoc=function(t,n){this.hasDoc(t)||this.length++,this.docs[t]=this._save===!0?e(n):null},t.DocumentStore.prototype.getDoc=function(e){return this.hasDoc(e)===!1?null:this.docs[e]},t.DocumentStore.prototype.hasDoc=function(e){return e in this.docs},t.DocumentStore.prototype.removeDoc=function(e){this.hasDoc(e)&&(delete this.docs[e],delete this.docInfo[e],this.length--)},t.DocumentStore.prototype.addFieldLength=function(e,t,n){null!==e&&void 0!==e&&0!=this.hasDoc(e)&&(this.docInfo[e]||(this.docInfo[e]={}),this.docInfo[e][t]=n)},t.DocumentStore.prototype.updateFieldLength=function(e,t,n){null!==e&&void 0!==e&&0!=this.hasDoc(e)&&this.addFieldLength(e,t,n)},t.DocumentStore.prototype.getFieldLength=function(e,t){return null===e||void 0===e?0:e in this.docs&&t in this.docInfo[e]?this.docInfo[e][t]:0},t.DocumentStore.prototype.toJSON=function(){return{docs:this.docs,docInfo:this.docInfo,length:this.length,save:this._save}},t.stemmer=function(){var e={ational:"ate",tional:"tion",enci:"ence",anci:"ance",izer:"ize",bli:"ble",alli:"al",entli:"ent",eli:"e",ousli:"ous",ization:"ize",ation:"ate",ator:"ate",alism:"al",iveness:"ive",fulness:"ful",ousness:"ous",aliti:"al",iviti:"ive",biliti:"ble",logi:"log"},t={icate:"ic",ative:"",alize:"al",iciti:"ic",ical:"ic",ful:"",ness:""},n="[^aeiou]",i="[aeiouy]",o=n+"[^aeiouy]*",r=i+"[aeiou]*",s="^("+o+")?"+r+o,u="^("+o+")?"+r+o+"("+r+")?$",a="^("+o+")?"+r+o+r+o,l="^("+o+")?"+i,c=new RegExp(s),d=new RegExp(a),f=new RegExp(u),h=new RegExp(l),p=/^(.+?)(ss|i)es$/,v=/^(.+?)([^s])s$/,g=/^(.+?)eed$/,m=/^(.+?)(ed|ing)$/,y=/.$/,S=/(at|bl|iz)$/,x=new RegExp("([^aeiouylsz])\\1$"),w=new RegExp("^"+o+i+"[^aeiouwxy]$"),I=/^(.+?[^aeiou])y$/,b=/^(.+?)(ational|tional|enci|anci|izer|bli|alli|entli|eli|ousli|ization|ation|ator|alism|iveness|fulness|ousness|aliti|iviti|biliti|logi)$/,E=/^(.+?)(icate|ative|alize|iciti|ical|ful|ness)$/,D=/^(.+?)(al|ance|ence|er|ic|able|ible|ant|ement|ment|ent|ou|ism|ate|iti|ous|ive|ize)$/,F=/^(.+?)(s|t)(ion)$/,_=/^(.+?)e$/,P=/ll$/,k=new RegExp("^"+o+i+"[^aeiouwxy]$"),z=function(n){var i,o,r,s,u,a,l;if(n.length<3)return n;if(r=n.substr(0,1),"y"==r&&(n=r.toUpperCase()+n.substr(1)),s=p,u=v,s.test(n)?n=n.replace(s,"$1$2"):u.test(n)&&(n=n.replace(u,"$1$2")),s=g,u=m,s.test(n)){var z=s.exec(n);s=c,s.test(z[1])&&(s=y,n=n.replace(s,""))}else if(u.test(n)){var z=u.exec(n);i=z[1],u=h,u.test(i)&&(n=i,u=S,a=x,l=w,u.test(n)?n+="e":a.test(n)?(s=y,n=n.replace(s,"")):l.test(n)&&(n+="e"))}if(s=I,s.test(n)){var z=s.exec(n);i=z[1],n=i+"i"}if(s=b,s.test(n)){var z=s.exec(n);i=z[1],o=z[2],s=c,s.test(i)&&(n=i+e[o])}if(s=E,s.test(n)){var z=s.exec(n);i=z[1],o=z[2],s=c,s.test(i)&&(n=i+t[o])}if(s=D,u=F,s.test(n)){var z=s.exec(n);i=z[1],s=d,s.test(i)&&(n=i)}else if(u.test(n)){var z=u.exec(n);i=z[1]+z[2],u=d,u.test(i)&&(n=i)}if(s=_,s.test(n)){var z=s.exec(n);i=z[1],s=d,u=f,a=k,(s.test(i)||u.test(i)&&!a.test(i))&&(n=i)}return s=P,u=d,s.test(n)&&u.test(n)&&(s=y,n=n.replace(s,"")),"y"==r&&(n=r.toLowerCase()+n.substr(1)),n};return z}(),t.Pipeline.registerFunction(t.stemmer,"stemmer"),t.stopWordFilter=function(e){return e&&t.stopWordFilter.stopWords[e]!==!0?e:void 0},t.clearStopWords=function(){t.stopWordFilter.stopWords={}},t.addStopWords=function(e){null!=e&&Array.isArray(e)!==!1&&e.forEach(function(e){t.stopWordFilter.stopWords[e]=!0},this)},t.resetStopWords=function(){t.stopWordFilter.stopWords=t.defaultStopWords},t.defaultStopWords={"":!0,a:!0,able:!0,about:!0,across:!0,after:!0,all:!0,almost:!0,also:!0,am:!0,among:!0,an:!0,and:!0,any:!0,are:!0,as:!0,at:!0,be:!0,because:!0,been:!0,but:!0,by:!0,can:!0,cannot:!0,could:!0,dear:!0,did:!0,"do":!0,does:!0,either:!0,"else":!0,ever:!0,every:!0,"for":!0,from:!0,get:!0,got:!0,had:!0,has:!0,have:!0,he:!0,her:!0,hers:!0,him:!0,his:!0,how:!0,however:!0,i:!0,"if":!0,"in":!0,into:!0,is:!0,it:!0,its:!0,just:!0,least:!0,let:!0,like:!0,likely:!0,may:!0,me:!0,might:!0,most:!0,must:!0,my:!0,neither:!0,no:!0,nor:!0,not:!0,of:!0,off:!0,often:!0,on:!0,only:!0,or:!0,other:!0,our:!0,own:!0,rather:!0,said:!0,say:!0,says:!0,she:!0,should:!0,since:!0,so:!0,some:!0,than:!0,that:!0,the:!0,their:!0,them:!0,then:!0,there:!0,these:!0,they:!0,"this":!0,tis:!0,to:!0,too:!0,twas:!0,us:!0,wants:!0,was:!0,we:!0,were:!0,what:!0,when:!0,where:!0,which:!0,"while":!0,who:!0,whom:!0,why:!0,will:!0,"with":!0,would:!0,yet:!0,you:!0,your:!0},t.stopWordFilter.stopWords=t.defaultStopWords,t.Pipeline.registerFunction(t.stopWordFilter,"stopWordFilter"),t.trimmer=function(e){if(null===e||void 0===e)throw new Error("token should not be undefined");return e.replace(/^\W+/,"").replace(/\W+$/,"")},t.Pipeline.registerFunction(t.trimmer,"trimmer"),t.InvertedIndex=function(){this.root={docs:{},df:0}},t.InvertedIndex.load=function(e){var t=new this;return t.root=e.root,t},t.InvertedIndex.prototype.addToken=function(e,t,n){for(var n=n||this.root,i=0;i<=e.length-1;){var o=e[i];o in n||(n[o]={docs:{},df:0}),i+=1,n=n[o]}var r=t.ref;n.docs[r]?n.docs[r]={tf:t.tf}:(n.docs[r]={tf:t.tf},n.df+=1)},t.InvertedIndex.prototype.hasToken=function(e){if(!e)return!1;for(var t=this.root,n=0;n<e.length;n++){if(!t[e[n]])return!1;t=t[e[n]]}return!0},t.InvertedIndex.prototype.getNode=function(e){if(!e)return null;for(var t=this.root,n=0;n<e.length;n++){if(!t[e[n]])return null;t=t[e[n]]}return t},t.InvertedIndex.prototype.getDocs=function(e){var t=this.getNode(e);return null==t?{}:t.docs},t.InvertedIndex.prototype.getTermFrequency=function(e,t){var n=this.getNode(e);return null==n?0:t in n.docs?n.docs[t].tf:0},t.InvertedIndex.prototype.getDocFreq=function(e){var t=this.getNode(e);return null==t?0:t.df},t.InvertedIndex.prototype.removeToken=function(e,t){if(e){var n=this.getNode(e);null!=n&&t in n.docs&&(delete n.docs[t],n.df-=1)}},t.InvertedIndex.prototype.expandToken=function(e,t,n){if(null==e||""==e)return[];var t=t||[];if(void 0==n&&(n=this.getNode(e),null==n))return t;n.df>0&&t.push(e);for(var i in n)"docs"!==i&&"df"!==i&&this.expandToken(e+i,t,n[i]);return t},t.InvertedIndex.prototype.toJSON=function(){return{root:this.root}},t.Configuration=function(e,n){var e=e||"";if(void 0==n||null==n)throw new Error("fields should not be null");this.config={};var i;try{i=JSON.parse(e),this.buildUserConfig(i,n)}catch(o){t.utils.warn("user configuration parse failed, will use default configuration"),this.buildDefaultConfig(n)}},t.Configuration.prototype.buildDefaultConfig=function(e){this.reset(),e.forEach(function(e){this.config[e]={boost:1,bool:"OR",expand:!1}},this)},t.Configuration.prototype.buildUserConfig=function(e,n){var i="OR",o=!1;if(this.reset(),"bool"in e&&(i=e.bool||i),"expand"in e&&(o=e.expand||o),"fields"in e)for(var r in e.fields)if(n.indexOf(r)>-1){var s=e.fields[r],u=o;void 0!=s.expand&&(u=s.expand),this.config[r]={boost:s.boost||0===s.boost?s.boost:1,bool:s.bool||i,expand:u}}else t.utils.warn("field name in user configuration not found in index instance fields");else this.addAllFields2UserConfig(i,o,n)},t.Configuration.prototype.addAllFields2UserConfig=function(e,t,n){n.forEach(function(n){this.config[n]={boost:1,bool:e,expand:t}},this)},t.Configuration.prototype.get=function(){return this.config},t.Configuration.prototype.reset=function(){this.config={}},lunr.SortedSet=function(){this.length=0,this.elements=[]},lunr.SortedSet.load=function(e){var t=new this;return t.elements=e,t.length=e.length,t},lunr.SortedSet.prototype.add=function(){var e,t;for(e=0;e<arguments.length;e++)t=arguments[e],~this.indexOf(t)||this.elements.splice(this.locationFor(t),0,t);this.length=this.elements.length},lunr.SortedSet.prototype.toArray=function(){return this.elements.slice()},lunr.SortedSet.prototype.map=function(e,t){return this.elements.map(e,t)},lunr.SortedSet.prototype.forEach=function(e,t){return this.elements.forEach(e,t)},lunr.SortedSet.prototype.indexOf=function(e){for(var t=0,n=this.elements.length,i=n-t,o=t+Math.floor(i/2),r=this.elements[o];i>1;){if(r===e)return o;e>r&&(t=o),r>e&&(n=o),i=n-t,o=t+Math.floor(i/2),r=this.elements[o]}return r===e?o:-1},lunr.SortedSet.prototype.locationFor=function(e){for(var t=0,n=this.elements.length,i=n-t,o=t+Math.floor(i/2),r=this.elements[o];i>1;)e>r&&(t=o),r>e&&(n=o),i=n-t,o=t+Math.floor(i/2),r=this.elements[o];return r>e?o:e>r?o+1:void 0},lunr.SortedSet.prototype.intersect=function(e){for(var t=new lunr.SortedSet,n=0,i=0,o=this.length,r=e.length,s=this.elements,u=e.elements;;){if(n>o-1||i>r-1)break;s[n]!==u[i]?s[n]<u[i]?n++:s[n]>u[i]&&i++:(t.add(s[n]),n++,i++)}return t},lunr.SortedSet.prototype.clone=function(){var e=new lunr.SortedSet;return e.elements=this.toArray(),e.length=e.elements.length,e},lunr.SortedSet.prototype.union=function(e){var t,n,i;this.length>=e.length?(t=this,n=e):(t=e,n=this),i=t.clone();for(var o=0,r=n.toArray();o<r.length;o++)i.add(r[o]);return i},lunr.SortedSet.prototype.toJSON=function(){return this.toArray()},function(e,t){"function"==typeof define&&define.amd?define(t):"object"==typeof exports?module.exports=t():e.elasticlunr=t()}(this,function(){return t})}();
    /** pdoc search index */const docs = {"version": "0.9.5", "fields": ["qualname", "fullname", "annotation", "default_value", "signature", "bases", "doc"], "ref": "fullname", "documentStore": {"docs": {"run": {"fullname": "run", "modulename": "run", "kind": "module", "doc": "<p>A module for running experiments that involve the execution of\ncommands with different combinations of command line arguments.</p>\n\n<p>This is a somewhat short reference documentation of the interface.\nThere is also a <a href=\"./index.html\">longer explanation including various\nexamples</a>.</p>\n"}, "run.add": {"fullname": "run.add", "modulename": "run", "qualname": "add", "kind": "function", "doc": "<p>Add a new experiment.</p>\n\n<p>Based on the experiment description, a set of inidvidual runs is\ngenerated, where each individual run basically corresponds to a\nset of command line arguments.  The arguments are represented by a\ndictionary, i.e., each argument has a key and a value.</p>\n\n<p>To describe how the arguments of an individual run can be used in\nseveral places, we need the concept of a <em>blob</em>.  Ultimately, a\nblob is something that will be evaluated to a string by replacing\nwildcards of the form <code>[[key]]</code> with the value of the\ncorresponding argument.  A blob can also be a function, in which\ncase it is evaluated (with the arguments as parameter) before\ndoing this kind of replacements.  For more details on how a blob\nturns into a string, see the function <code>deblob()</code>.  Note that a\nblob is only defined in the context of an individual run.  Thus,\nwhenever we talk about blob, we implicitly have an individual run\nwith a specific set of arguments in mind.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>name</strong> (blob):\nName of the experiment.  An experiment is only run if its name\n(or the name of its <code>group</code>) appears as command line parameter.\nIt does not need to be unique among experiments.</li>\n<li><strong>command</strong> (blob):\nThe command that will be called for each run.</li>\n<li><strong>arguments_descr</strong> (dictionary):\nDictionary of arguments or lists of arguments.  In case of\nlists, one run for each combination of arguments is generated.\nEach individual argument is a blob, where the blobs are\nevaluated to strings in order of appearance in the dictionary.</li>\n<li><strong>creates_file</strong> (blob, optional):\nDescribes the name of a file that is created by calling the\ncommand.  This is only used to skip the run if the file already\nexists (at the time when this method is called, not at the time\nwhen the command is actually run).</li>\n<li><p><strong>stdout_file</strong> (blob, optional):\nThe filename to which the standard output of the run should be\nwritten.  There are three different cases, depending on whether\nthis file already exists:</p>\n\n<ol>\n<li><p>If the file exists when calling this function (i.e., before\nperforming any runs), the run is skipped.</p></li>\n<li><p>If the run is not skipped but the file exists when executing\nthe run, the standard output is added at the end of the file.</p></li>\n<li><p>If the file does not exist, it is created beginning with the\nheader (if specified) and then the standard output is added.</p></li>\n</ol></li>\n<li><strong>stdout_mod</strong> (function, default =<code>identity</code>):\nA function applied to the standard output of the run, before\nwriting it to the file.  If the function takes one argument, it\ngets the standard output as string as input.  Otherwise, it\nshould take two arguments, the standard output as string and the\nresult of a call to <code>subprocess.run()</code>.  The latter gives\naccess to additional information such as the return code.  The\nfunction can return a blob using the special wildcard\n<code>[[stdout]]</code> (similar to <code>stdout_res</code>).</li>\n<li><strong>stdout_res</strong> (blob, optional):\nIf given, this blob is written to the file instead of the\nstandard output itself.  This blob is somewhat special in the\nsense that it evaluated after the run has finished with the\nspecial argument <code>stdout</code>, i.e., the blob can contain the\nspecial wildcard <code>[[stdout]]</code>, which will be replaced by the\nstandard output (after it was modified by <code>stdout_mod</code>).</li>\n<li><strong>header_string</strong> (blob, optional):\nA string specifying the header; see input parameter\n<code>stdout_file</code>.</li>\n<li><strong>header_command</strong> (blob, optional):\nA command that is run to use its standard output as header.</li>\n<li><strong>header_mod</strong> (function, default =<code>identity</code>):\nA function that is applied to the header (specified by\n<code>header_string</code> or <code>header_command</code>) before writing it to a\nfile.  It should take one argument (a string) and return a\nstring.</li>\n<li><strong>return_string</strong> (blob, optional):\nIf given, this blob will be evaluated for each run and a list of\nthe results is returned.</li>\n<li><strong>allowed_return_codes</strong> (list[int], default =<code>[0]</code>):\nA list of allowed return codes.  If a command returns any other\ncode, a warning is printed and the run is aborted.  The empty\nlist <code>[]</code> indicates that any return code should be accepted.</li>\n<li><strong>combinations_filter</strong> (function, default = always <code>True</code>):\nA function that filters the combinations of arguments.  It\nshould take a dictionary of arguments and decide whether it\nrepresents a valid combination by returning <code>True</code> of\n<code>False</code>.  The default returns always <code>True</code>, i.e., a run is\ncreated for every combination.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>None or list[string]</strong>: See documentation of <code>return_string</code>.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">name</span>,</span><span class=\"param\">\t<span class=\"n\">command</span>,</span><span class=\"param\">\t<span class=\"n\">arguments_descr</span>,</span><span class=\"param\">\t<span class=\"n\">creates_file</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">stdout_file</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">stdout_mod</span><span class=\"o\">=&lt;</span><span class=\"n\">function</span> <span class=\"n\">_identity</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">stdout_res</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">header_string</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">header_command</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">header_mod</span><span class=\"o\">=&lt;</span><span class=\"n\">function</span> <span class=\"n\">_identity</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">return_string</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">allowed_return_codes</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">combinations_filter</span><span class=\"o\">=&lt;</span><span class=\"n\">function</span> <span class=\"o\">&lt;</span><span class=\"k\">lambda</span><span class=\"o\">&gt;&gt;</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "run.run": {"fullname": "run.run", "modulename": "run", "qualname": "run", "kind": "function", "doc": "<p>Run the previously declared experiments.</p>\n\n<p>You should call this exactly once at the end of the file.</p>\n\n<p>If <code>dry_run</code> is given as command line parameter, then the runs are\nnot executed but the commands printed to <code>stdout</code>.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "run.use_cores": {"fullname": "run.use_cores", "modulename": "run", "qualname": "use_cores", "kind": "function", "doc": "<p>Set the number of cores used to run the experiments.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>nr_cores</strong> (int):\nThe number of cores that should be used.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">nr_cores</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "run.group": {"fullname": "run.group", "modulename": "run", "qualname": "group", "kind": "function", "doc": "<p>Set the current group.</p>\n\n<p>Each experiment created with <code>add()</code> is added to the group for\nwhich this function was last called.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>group_name</strong> (string):\nThe name of the group.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">group_name</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "run.section": {"fullname": "run.section", "modulename": "run", "qualname": "section", "kind": "function", "doc": "<p>Print a section title.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>title</strong> (string):\nThe title that should be printed.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">title</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "run.deblob": {"fullname": "run.deblob", "modulename": "run", "qualname": "deblob", "kind": "function", "doc": "<p>Transforms a blob into a string.</p>\n\n<p>This function is meant for internal use but understanding what it\ndoes might be useful.  A blob is transferred into a string in the\nfollowing steps.</p>\n\n<ol>\n<li><p>If <code>blob</code> is a function, it is called with <code>args</code> as parameter.</p></li>\n<li><p>The result (or <code>blob</code> itself, if 1. did not apply) is converted\nto a string (using <code>str()</code>).</p></li>\n<li><p>Every pattern of the form <code>[[key]]</code> is replaced by the value of\nthe corresponding argument in <code>args</code>.</p></li>\n</ol>\n\n<p>Step 3 assumes that every pattern of the form <code>[[key]]</code> has a\ncorresponding argument with this key.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>blob</strong> (blob):\nThe blob that should be turned into a string.</li>\n<li><strong>args</strong> (dictionary):\nThe named arguments of the current run.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">blob</span>, </span><span class=\"param\"><span class=\"n\">args</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "index": {"fullname": "index", "modulename": "index", "kind": "module", "doc": "<p>A module for running experiments that involve the execution of\ncommands with different combinations of command line arguments.</p>\n\n<p>Read on for an explanation with a bunch of examples, check out the\n<a href=\"./run.html\">reference documentation</a>, or download the\n<a href=\"https://github.com/thobl/run\">code</a>.</p>\n\n<h1 id=\"basic-concepts\">Basic Concepts</h1>\n\n<ol>\n<li><p><strong>Generate Argument Combinations.</strong> Instead of specifying all\ncombinations of command line arguments for your experiment\nexplicitly, you specify the sets of values for each argument.  A\nset of runs with one run for each combination is generated\nautomatically.</p></li>\n<li><p><strong>Everything is a Blob.</strong> At its core a blob is something that\nevaluates to a string based on the arguments of a single run.  In\nmost cases, a blob is simply a string that can contain wildcards\nfor these arguments.</p></li>\n<li><p><strong>Skip Unnecessary Runs.</strong> Runs are skipped if the produced output\nfile already exists.  This is particularly helpful if the\nexperiment setup evolves over time.</p></li>\n<li><p><strong>Postprocessing the Output.</strong> If the command prints its result to\n<code>stdout</code>, you can specify how it should be saved to a file.  This\nlets you, e.g., add some reformatting procedure or handle timeouts.</p></li>\n</ol>\n\n<h1 id=\"usage\">Usage</h1>\n\n<p>Your experiment script should look somewhat like this:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"c1\"># example.py</span>\n<span class=\"kn\">import</span> <span class=\"nn\">run</span>\n\n<span class=\"n\">run</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"o\">...</span><span class=\"p\">)</span>\n<span class=\"n\">run</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"o\">...</span><span class=\"p\">)</span>\n<span class=\"o\">...</span>\n<span class=\"n\">run</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">()</span>\n</code></pre>\n</div>\n\n<p>The method <code>run.add()</code> has three mandatory parameters and multiple\nkeyword parameters.  The first parameter specifies the name of the\nexperiment.  This is used so you can select which experiments to run,\ne.g., calling <code>python example.py name1 name2</code> runs all experiments\nwhere the name was <code>name1</code> or <code>name2</code> (experiments can also be\n<a href=\"#experiment-names-and-groups\">grouped</a>).  The second parameter\nspecifies the command that should be called and the third parameter is\na description of the arguments the command should be called with.\nTheir usage is explained in the <a href=\"#generate-argument-combinations\">next\nsection</a>.</p>\n\n<h2 id=\"generate-argument-combinations\">Generate Argument Combinations</h2>\n\n<p>Here is an easy example for an experiment that create some files by\ncalling the <code>touch</code> command.</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"n\">run</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span>\n    <span class=\"s2\">&quot;create_files&quot;</span><span class=\"p\">,</span>\n    <span class=\"s2\">&quot;touch output/a=[[a]]_b=[[b]]_c=[[c]].txt&quot;</span><span class=\"p\">,</span>\n    <span class=\"p\">{</span><span class=\"s1\">&#39;a&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">],</span> <span class=\"s1\">&#39;b&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">],</span> <span class=\"s1\">&#39;c&#39;</span><span class=\"p\">:</span> <span class=\"mi\">0</span><span class=\"p\">}</span>\n<span class=\"p\">)</span>\n</code></pre>\n</div>\n\n<p>The third parameter specifies the three arguments <code>a</code>, <code>b</code>, and\n<code>c</code>.  As <code>a</code> and <code>b</code> are lists, one run is created for each\ncombination of arguments.  The second parameter specifies the command\nfor each run.  It is a blob, i.e., the wildcard of the form <code>[[a]]</code>\nis replaced with the corresponding value for <code>a</code> in each of the\nruns.  Thus, the above experiment calls <code>touch</code> six times creating\nthe following files.</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code>$ ls output/\n<span class=\"s1\">&#39;a=1_b=1_c=0.txt&#39;</span>  <span class=\"s1\">&#39;a=1_b=2_c=0.txt&#39;</span>  <span class=\"s1\">&#39;a=1_b=3_c=0.txt&#39;</span>\n<span class=\"s1\">&#39;a=2_b=1_c=0.txt&#39;</span>  <span class=\"s1\">&#39;a=2_b=2_c=0.txt&#39;</span>  <span class=\"s1\">&#39;a=2_b=3_c=0.txt&#39;</span>\n</code></pre>\n</div>\n\n<p><strong>Note:</strong> In case your experiment involves some dependencies between\nthe parameters that make some of the combinations invalid, you can\n<a href=\"#filtering-the-combinations\">filter those out</a>.</p>\n\n<h2 id=\"everything-is-a-blob\">Everything is a Blob</h2>\n\n<p>In the above example, the command (second parameter) is a blob, i.e.,\nall wildcards are replaced with the appropriate values for each run.\nBesides being a string with wildcards, a blob can also be a function\nthat returns a string with wildcards.  In this case, it is called with\nthe arguments of the current run as parameter, before the wildcards\nare replaced.  See <a href=\"#blobs\">Blobs</a> for more details.</p>\n\n<p>Almost all parameters of <code>run.add()</code> are blobs and are thus evaluated\nbased on the arguments of each individual run.  Even the arguments\nthemselves can be blobs based on earlier arguments.  The <a href=\"#skip-unnecessary-runs\">next\nsection</a> contains an example for this.\nMoreover, there are some more details on blobs <a href=\"#blobs\">below</a>.</p>\n\n<h2 id=\"skip-unnecessary-runs\">Skip Unnecessary Runs</h2>\n\n<p>In the above example, <code>run</code> does not know that the runs create\nfiles.  Thus, the <code>touch</code> commands is called even if the files\nalready exist.  You can use the optimal parameter <code>creates_file</code> to\nexplicitly state which file is created by a run.  It is a blob, so in\nthe above example you could add\n<code>creats_file=\"output/a=[[a]]_b=[[b]]_c=[[c]].txt\"</code>.  Equivalently,\nyou can achieve the same in the following more elegant way, using that\nthe arguments themselves are blobs.</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"n\">run</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span>\n    <span class=\"s2\">&quot;create_files&quot;</span><span class=\"p\">,</span>\n    <span class=\"s2\">&quot;touch [[file]]&quot;</span><span class=\"p\">,</span>\n    <span class=\"p\">{</span><span class=\"s1\">&#39;a&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">],</span> <span class=\"s1\">&#39;b&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">],</span> <span class=\"s1\">&#39;c&#39;</span><span class=\"p\">:</span> <span class=\"mi\">0</span><span class=\"p\">,</span>\n     <span class=\"s1\">&#39;file&#39;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;output/a=[[a]]_b=[[b]]_c=[[c]].txt&quot;</span><span class=\"p\">},</span>\n    <span class=\"n\">creates_file</span><span class=\"o\">=</span><span class=\"s2\">&quot;[[file]]&quot;</span>\n<span class=\"p\">)</span>\n</code></pre>\n</div>\n\n<p>Now executing the script calls <code>touch</code> only for those files that do\nnot already exist.  For more details on when exactly a run is skipped,\nsee <a href=\"#policy-of-skipping-runs\">Policy of Skipping Runs</a>.</p>\n\n<p><strong>Note:</strong> Specifying <code>creates_file</code> is only necessary if the command\nitself creates the file.  If instead the command's output to <code>stdout</code>\nis written to a file (see <a href=\"#postprocessing-the-output\">next section</a>),\n<code>run</code> already knows which file is created.</p>\n\n<h2 id=\"postprocessing-the-output\">Postprocessing the Output</h2>\n\n<p>If the parameter <code>stdout_file</code> is provided, the command's output to\n<code>stdout</code> is written to the corresponding file.  This is illustrated\nby the following example.</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"n\">run</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span>\n    <span class=\"s2\">&quot;sum&quot;</span><span class=\"p\">,</span>\n    <span class=\"s2\">&quot;echo $(([[a]] + [[b]]))&quot;</span><span class=\"p\">,</span>\n    <span class=\"p\">{</span><span class=\"s1\">&#39;a&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">],</span> <span class=\"s1\">&#39;b&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">]},</span>\n    <span class=\"n\">stdout_file</span><span class=\"o\">=</span><span class=\"s2\">&quot;output/[[a]]+[[b]].txt&quot;</span>\n<span class=\"p\">)</span>\n</code></pre>\n</div>\n\n<p>The <code>echo</code> command itself adds the two given values and writes them\nto standard output.  The run module takes this result and writes it\nto the provided file instead.  Thus, executing this example creates\nsix files with different values for a and b, each of which contains\nthe sum of a and b as content.</p>\n\n<p>You can postprocess <code>stdout</code> (given as string) by providing the\nparameters <code>stdout_mod</code> (a function returning a blob) or\n<code>stdout_res</code> (a blob).  If both are provided, they are applied in\nthis order.</p>\n\n<p>The function <code>stdout_mod</code> gets <code>stdout</code> as input its return value\nreplaces <code>stdout</code>.  This can serve as some kind of parser that,\ne.g., reformats the output from something human readable to csv.\nAdditionally, if the function takes two parameters, the second\nparameter is the result of the call to\n<a href=\"https://docs.python.org/3/library/subprocess.html#subprocess.run\"><code>subprocess.run()</code></a>.\nThis can be useful to do a more sophisticated reformatting not only\nbased on <code>stdout</code> but also, e.g., on the return code or stderr.</p>\n\n<p>If the blob <code>stdout_res</code> is given, this blob is written to the file\ninstead of <code>stdout</code> itself.  This blob is somewhat special as it\nallows for the additional argument <code>stdout</code>.  The following example\nuses <code>stdout_res</code> with the wildcard <code>[[stdout]]</code>.</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"n\">run</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span>\n    <span class=\"s2\">&quot;sum&quot;</span><span class=\"p\">,</span>\n    <span class=\"s2\">&quot;echo $(([[a]] + [[b]]))&quot;</span><span class=\"p\">,</span>\n    <span class=\"p\">{</span><span class=\"s1\">&#39;a&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">],</span> <span class=\"s1\">&#39;b&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">]},</span>\n    <span class=\"n\">stdout_file</span><span class=\"o\">=</span><span class=\"s2\">&quot;output/sums.txt&quot;</span><span class=\"p\">,</span>\n    <span class=\"n\">stdout_res</span><span class=\"o\">=</span><span class=\"s2\">&quot;[[a]] + [[b]] = [[stdout]]&quot;</span>\n<span class=\"p\">)</span>\n</code></pre>\n</div>\n\n<p>This produces the following file.</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code>$ cat output/sums.txt \n<span class=\"m\">2</span> + <span class=\"nv\">3</span> <span class=\"o\">=</span> <span class=\"m\">5</span>\n<span class=\"m\">2</span> + <span class=\"nv\">4</span> <span class=\"o\">=</span> <span class=\"m\">6</span>\n<span class=\"m\">1</span> + <span class=\"nv\">3</span> <span class=\"o\">=</span> <span class=\"m\">4</span>\n<span class=\"m\">1</span> + <span class=\"nv\">4</span> <span class=\"o\">=</span> <span class=\"m\">5</span>\n</code></pre>\n</div>\n\n<p>Note that the output of the individual runs was appended to the file,\ni.e., the runs were not skipped.  This is the intended behavior to\nsupport these kind of experiment setups; see <a href=\"#policy-of-skipping-runs\">Policy of Skipping\nRuns</a> for more details on when exactly a run\nis skipped.</p>\n\n<p><strong>Note:</strong> There are several cases where <code>stdout_mod</code> and\n<code>stdout_res</code> can both be used to achieve the same thing.  You can\nuse this rule of thumb:</p>\n\n<ul>\n<li><p>Use <code>stdout_mod</code> if you want to reformat <code>stdout</code> or if you\nneed access to things like the return code.</p></li>\n<li><p>Use <code>stdout_res</code> if you want to combine <code>stdout</code> with the input\narguments.</p></li>\n<li><p>Use both if you need both.</p></li>\n</ul>\n\n<p><strong>Note:</strong> When using <code>stdout_file</code>, one can additionally <a href=\"#headers\">write a\nheader</a> to the first line of the file.</p>\n\n<h1 id=\"details\">Details</h1>\n\n<p>When you execute your experiment script, the following steps are\nperformed in this order.</p>\n\n<ol>\n<li><p><strong>Generate Combinations.</strong> For each experiment, create the cross\nproduct of all argument lists provided in third parameter of\n<code>run.add()</code>.  For each argument combination that is not rejected\nby <a href=\"#filtering-the-combinations\"><code>combinations_filter</code></a>, a single\nrun is created.  Each individual argument is a blob.</p></li>\n<li><p><strong>Deblob.</strong> For each individual run, the <a href=\"#blobs\">blobs are turned into\nstrings</a>.  This is first done for all arguments in the\norder they are given.  Then all other blobs (except <code>stdout_res</code>)\nare deblobbed.</p></li>\n<li><p><strong>Skipping Runs.</strong> For each run, it is decided whether to skip the\nrun.  A run is skipped if the file it would produce (specified by\n<code>creates_file</code> or <code>stdout_file</code>) already exists at this stage\nin the process.</p></li>\n<li><p><strong>Filter Unselected Runs.</strong> A run counts as selected if its\nexperiments <a href=\"#experiment-names-and-groups\">name or group</a> was used\nas command line parameter to execute your experiment script.  All\nother runs are ignored.</p></li>\n<li><p><strong>Run and Output Results.</strong> The runs are executed and, depending on\nthe <a href=\"#postprocessing-the-output\">stdout settings</a> and the <a href=\"#headers\">header\nsettings</a>, the output is written.</p></li>\n</ol>\n\n<h2 id=\"blobs\">Blobs</h2>\n\n<p>Deblobbing happens in three steps in the function <code>run.deblob()</code>.</p>\n\n<ol>\n<li><p>If the blob is a function, it is called with one parameter\n<code>args</code>.  <code>args</code> is a dictionary mapping from the argument names\nto the value.  Note that this is done after generating the\ncombinations, i.e., the argument values are no longer lists.</p></li>\n<li><p>The result of step 1. (or the blob itself if it is not a function)\nis converted into a string.  Thus, it is ok for an argument to\nhave, e.g., integer values or for the above function to return\ninteger values.</p></li>\n<li><p>In the resulting string, each pattern of the form <code>[[key]]</code> is\nreplaced with the corresponding value in <code>args</code>.</p></li>\n</ol>\n\n<p>The following example is similar to one of the previous examples,\nextending the computation of the sum to also compute differences,\nproducts, and quotients.  It gives an example of how to make use of\nthe fact that blobs can be functions.  Note how the output file name\n(<code>stdout_file</code>) of each run depends on the operator.  As the\nargument combinations are generated before deblobbing,\n<code>args['operator']</code> in the lambda function evaluates to one of the\noperators (and not to the list of all operators).  Running this,\ncreates the four files <code>sum.txt</code>, <code>diff.txt</code>, <code>prod.txt</code>, and\n<code>quot.txt</code>, each containing the respective calculations.</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"n\">res_name</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s1\">&#39;+&#39;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;sum&quot;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;-&#39;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;diff&quot;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;*&#39;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;prod&quot;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;/&#39;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;quot&quot;</span><span class=\"p\">}</span>\n<span class=\"n\">run</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span>\n    <span class=\"s2\">&quot;calculate&quot;</span><span class=\"p\">,</span>\n    <span class=\"s2\">&quot;echo $(([[a]] [[operator]] [[b]]))&quot;</span><span class=\"p\">,</span>\n    <span class=\"p\">{</span><span class=\"s1\">&#39;a&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">],</span> <span class=\"s1\">&#39;b&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">],</span>\n     <span class=\"s1\">&#39;operator&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s2\">&quot;+&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;-&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;*&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;/&quot;</span><span class=\"p\">]</span>\n     <span class=\"p\">},</span>\n    <span class=\"n\">stdout_file</span><span class=\"o\">=</span><span class=\"k\">lambda</span> <span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"s2\">&quot;output/&quot;</span> <span class=\"o\">+</span> <span class=\"n\">res_name</span><span class=\"p\">[</span><span class=\"n\">args</span><span class=\"p\">[</span><span class=\"s1\">&#39;operator&#39;</span><span class=\"p\">]]</span> <span class=\"o\">+</span> <span class=\"s2\">&quot;.txt&quot;</span><span class=\"p\">,</span>\n    <span class=\"n\">stdout_res</span><span class=\"o\">=</span><span class=\"s2\">&quot;[[a]] [[operator]] [[b]] = [[stdout]]&quot;</span>\n<span class=\"p\">)</span>\n</code></pre>\n</div>\n\n<p>The next example highlights how the order of evaluation matters when\nusing blobs for the arguments.  Assume we have three arguments <code>a</code>,\n<code>b</code>, and <code>c</code> that depend on each other, i.e., we want to consider\nnot all but only certain combinations of values.  In this example, we\nwant <code>a</code>, <code>b</code>, and <code>c</code> to be all combinations of natural numbers\nwith <code>a + b + c = 4</code>.  In the example below, this is done using the\nhelper argument <code>triple</code>, which is a list of triples.  Then the\nactual arguments <code>a</code>, <code>b</code>, and <code>c</code> use these triples.  Note that\nblobs of <code>a</code>, <code>b</code>, and <code>c</code> are deblobbed (i.e., their lambda\nfunctions are called) after lists have been split into separate runs\nbut before the <code>triple</code> argument was deblobbed.  Thus,\n<code>args['triple']</code> is a dictionary of the form <code>{'a': a, 'b': b, 'c':\nc}</code>.  Moreover, <code>a</code>, <code>b</code>, and <code>c</code> are deblobbed before\n<code>file</code>, which makes them usable as wildcards.</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"n\">run</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span>\n    <span class=\"s2\">&quot;sum_of_squares&quot;</span><span class=\"p\">,</span>\n    <span class=\"s2\">&quot;echo $(([[a]] * [[a]] + [[b]] * [[b]] + [[c]] * [[c]]))&quot;</span><span class=\"p\">,</span>\n    <span class=\"p\">{</span><span class=\"s1\">&#39;a&#39;</span><span class=\"p\">:</span> <span class=\"k\">lambda</span> <span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"n\">args</span><span class=\"p\">[</span><span class=\"s1\">&#39;triple&#39;</span><span class=\"p\">][</span><span class=\"s1\">&#39;a&#39;</span><span class=\"p\">],</span>\n     <span class=\"s1\">&#39;b&#39;</span><span class=\"p\">:</span> <span class=\"k\">lambda</span> <span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"n\">args</span><span class=\"p\">[</span><span class=\"s1\">&#39;triple&#39;</span><span class=\"p\">][</span><span class=\"s1\">&#39;b&#39;</span><span class=\"p\">],</span>\n     <span class=\"s1\">&#39;c&#39;</span><span class=\"p\">:</span> <span class=\"k\">lambda</span> <span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"n\">args</span><span class=\"p\">[</span><span class=\"s1\">&#39;triple&#39;</span><span class=\"p\">][</span><span class=\"s1\">&#39;c&#39;</span><span class=\"p\">],</span>\n     <span class=\"s1\">&#39;triple&#39;</span><span class=\"p\">:</span> <span class=\"p\">[{</span><span class=\"s1\">&#39;a&#39;</span><span class=\"p\">:</span> <span class=\"n\">a</span><span class=\"p\">,</span> <span class=\"s1\">&#39;b&#39;</span><span class=\"p\">:</span> <span class=\"n\">b</span><span class=\"p\">,</span> <span class=\"s1\">&#39;c&#39;</span><span class=\"p\">:</span> <span class=\"n\">c</span><span class=\"p\">}</span>\n                <span class=\"k\">for</span> <span class=\"n\">a</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">b</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">c</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">)</span>\n                <span class=\"k\">if</span> <span class=\"n\">a</span> <span class=\"o\">+</span> <span class=\"n\">b</span> <span class=\"o\">+</span> <span class=\"n\">c</span> <span class=\"o\">==</span> <span class=\"mi\">4</span><span class=\"p\">],</span>\n     <span class=\"s1\">&#39;file&#39;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;output/sum_of_squares_[[a]]_[[b]]_[[c]].txt&quot;</span>\n     <span class=\"p\">},</span>\n    <span class=\"n\">stdout_file</span><span class=\"o\">=</span><span class=\"s2\">&quot;[[file]]&quot;</span>\n<span class=\"p\">)</span>\n</code></pre>\n</div>\n\n<p>Changing the order could have unwanted effects.  Moving the argument\n<code>triple</code> before <code>a</code> would first deblob <code>triple</code>, before calling\nthe lambda function, which means that <code>args['triple']</code> would be the\nstring representation of the dictionary instead of the dictionary\nitself.  Moreover, having <code>file</code> before <code>a</code> would make the use of\n<code>'[[a]]'</code> invalid, as the argument <code>a</code> would not be a string but a\nfunction when trying to do the replacement.</p>\n\n<p>As a rule of thumb: Arguments you use as wild cards should go before,\narguments you want to use in their original form (not in their string\nrepresentation) within a function should go after.</p>\n\n<p><strong>Note:</strong> In the above example one could of course remove the <code>file</code>\nargument and directly assign its blob to <code>stdout_file</code>, as the\narguments are always deblobbed before any other blobs (like\n<code>stdout_file</code>).</p>\n\n<h2 id=\"filtering-the-combinations\">Filtering the Combinations</h2>\n\n<p>The previous example showed a somewhat hacky way of only looking at\nthose combinations of arguments <code>a</code>, <code>b</code>, and <code>c</code> where <code>a +\nb + c = 4</code>.  This can be achieved much easier using the parameter\n<code>combinations_filter</code>.  It is a function that gets called for every\nargument combination and decides whether it is valid (in which case a\nrun is created) or not (in which case the combination is discarded).</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"n\">run</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span>\n    <span class=\"s2\">&quot;better_sum_of_squares&quot;</span><span class=\"p\">,</span>\n    <span class=\"s2\">&quot;echo $(([[a]] * [[a]] + [[b]] * [[b]] + [[c]] * [[c]]))&quot;</span><span class=\"p\">,</span>\n    <span class=\"p\">{</span><span class=\"s1\">&#39;a&#39;</span><span class=\"p\">:</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">)),</span> <span class=\"s1\">&#39;b&#39;</span><span class=\"p\">:</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">)),</span> <span class=\"s1\">&#39;c&#39;</span><span class=\"p\">:</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">))},</span>\n    <span class=\"n\">stdout_file</span><span class=\"o\">=</span><span class=\"s2\">&quot;output/sum_of_squares_[[a]]_[[b]]_[[c]]_good.txt&quot;</span><span class=\"p\">,</span>\n    <span class=\"n\">combinations_filter</span><span class=\"o\">=</span><span class=\"k\">lambda</span> <span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"n\">args</span><span class=\"p\">[</span><span class=\"s1\">&#39;a&#39;</span><span class=\"p\">]</span> <span class=\"o\">+</span> <span class=\"n\">args</span><span class=\"p\">[</span><span class=\"s1\">&#39;b&#39;</span><span class=\"p\">]</span> <span class=\"o\">+</span> <span class=\"n\">args</span><span class=\"p\">[</span><span class=\"s1\">&#39;c&#39;</span><span class=\"p\">]</span> <span class=\"o\">==</span> <span class=\"mi\">4</span>\n<span class=\"p\">)</span>\n</code></pre>\n</div>\n\n<h2 id=\"policy-of-skipping-runs\">Policy of Skipping Runs</h2>\n\n<p>From the <a href=\"#details\">order of steps</a> discussed above, it becomes\nimplicitly clear that runs are only skipped if the result files\nalready exist at the time the script is executed.  Thus, if two runs\nhave the same non-existent output file, they are both run, even if the\nfile exists when the second run starts.  To make this more explicit,\nhere is the behavior of writing files when using the <code>stdout_file</code>\nparameter.</p>\n\n<ol>\n<li><p>If the file exists when adding the experiment via <code>run.add()</code>\n(i.e., before running any experiment), then the run is skipped.</p></li>\n<li><p>If the run is not skipped but the file exists when executing the\nrun, <code>stdout</code> is added at the end of the file.</p></li>\n<li><p>If the file does not exist, it is created beginning with the\n<a href=\"#headers\">header</a> (if specified) and then <code>stdout</code> is added.</p></li>\n</ol>\n\n<p>Thus, instead of writing one file per run, one can also have multiple\nruns write their output into a single file.  This can be the intended\nbehavior if, e.g., the output of the same algorithm on multiple\ninstances should appear in the same csv file.  The disadvantage of\nthis is that either all or none of the experiments creating this file\nare skipped, so extending the experiment would require to rerun it\n(which might be ok, depending on your use case).</p>\n\n<h2 id=\"headers\">Headers</h2>\n\n<p>When using <code>stdout_file</code>, one can use the parameter\n<code>header_string</code> (a blob) to specify a header that should appear in\nthe first line of the file.  Alternatively, one can specify\n<code>header_command</code> (again, a blob), which is a command that is\nexecuted and its output (to <code>stdout</code>) is used as header.  The\nresulting header can be modified by specifying the parameter\n<code>header_mod</code>.  It should be a function that takes the unmodified\nheader as input and outputs the actual (modified) header.</p>\n\n<p>Using <code>header_command</code> instead of simply <code>header_string</code> is\nadvantageous in the following scenario.  Assume you have an executable\ncalled <code>algo</code> that runs a certain algorithm on an input file and\noutputs some statistics using comma-separated values.  Moreover,\nassume <code>algo</code> is capable of printing the corresponding header by\ncalling <code>algo --only-header</code>.  Then the following example first\nwrites the header (obtained by calling <code>algo --only-header</code>)\nfollowed by the results of running <code>algo</code> on three input files.</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"n\">run</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span>\n    <span class=\"s2\">&quot;algo&quot;</span><span class=\"p\">,</span>\n    <span class=\"s2\">&quot;algo [[input]]&quot;</span><span class=\"p\">,</span>\n    <span class=\"p\">{</span><span class=\"s1\">&#39;input&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s2\">&quot;file1&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;file2&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;file3&quot;</span><span class=\"p\">]},</span>\n    <span class=\"n\">stdout_file</span><span class=\"o\">=</span><span class=\"s2\">&quot;output.csv&quot;</span><span class=\"p\">,</span>\n    <span class=\"n\">header_command</span><span class=\"o\">=</span><span class=\"s2\">&quot;algo --only-header&quot;</span>\n<span class=\"p\">)</span>\n</code></pre>\n</div>\n\n<p>The advantage of this is that the knowledge about the output of\n<code>algo</code> is concentrated at the <code>algo</code> executable, i.e., the\nexperiment script does not have to change if the statistics printed by\n<code>algo</code> change.  Moreover, using <code>header_command</code> over\n<code>header_string</code> becomes even more advantageous, when running\nmultiple commands, e.g., <code>algo1</code> and <code>algo2</code>, with the same\ncommand line interface (but potentially very different outputs) on the\nsame set of files.  This is illustrated by the following example (note\nthe usage of the wildcard <code>[[algo]]</code> in the command (second\nparameter) and the <code>header_command</code>).</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"n\">run</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span>\n    <span class=\"s2\">&quot;algos&quot;</span><span class=\"p\">,</span>\n    <span class=\"s2\">&quot;[[algo]] [[input]]&quot;</span><span class=\"p\">,</span>\n    <span class=\"p\">{</span><span class=\"s1\">&#39;algo&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s2\">&quot;algo1&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;algo2&quot;</span><span class=\"p\">],</span>\n     <span class=\"s1\">&#39;input&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s2\">&quot;file1&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;file2&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;file3&quot;</span><span class=\"p\">]},</span>\n    <span class=\"n\">stdout_file</span><span class=\"o\">=</span><span class=\"s2\">&quot;output_[[algo]].csv&quot;</span><span class=\"p\">,</span>\n    <span class=\"n\">header_command</span><span class=\"o\">=</span><span class=\"s2\">&quot;[[algo]] --only-header&quot;</span>\n<span class=\"p\">)</span>\n</code></pre>\n</div>\n\n<h2 id=\"error-handling\">Error Handling</h2>\n\n<p>This section is only about errors that happen when executing a run.\nIf you have an error in your experiment specification, then you\nprobably just get a python error you have to deal with.</p>\n\n<p>You can specify the allowed return codes of an experiment via the\nparameter <code>allowed_return_codes</code>.  The default is <code>[0]</code>.  If the\nreturn code of the command is not in the list of allowed return codes,\na warning is printed and the run is aborted, meaning that <code>stdout</code>\nis <strong>not</strong> written to the file given by <code>stdout_file</code>.  You can set\n<code>allowed_return_codes</code> to <code>[]</code> to indicate that every return code\nshould be accepted (you probably should not do this).</p>\n\n<p>In case different return codes are possible, you probably want to\npostprocess the result by using <code>stdout_mod</code> or <code>stdout_res</code>.\nWith the former, you have access to the return code; with the latter\nyou only have the output of the command; see the section about\n<a href=\"#postprocessing-the-output\">postprocessing the standard output</a>.</p>\n\n<p>In the following example, <code>sleep [[time]] &amp;&amp; echo waking up</code> waits\nfor 0 to 4 seconds and then outputs <code>waking up</code>.  The command\n<code>timeout 2</code> aborts this after 2 seconds and returns with code\n<code>124</code> and no output to <code>stdout</code>.  The return codes <code>0</code> and\n<code>124</code> are allowed by setting <code>allowed_return_codes=[0, 124]</code>.\nMoreover, the blob <code>stdout_res</code> specifies the output depending on\nwhether there was a timeout.</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"n\">run</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span>\n    <span class=\"s2\">&quot;timeouts&quot;</span><span class=\"p\">,</span>\n    <span class=\"s2\">&quot;timeout 2 sleep [[time]] &amp;&amp; echo waking up&quot;</span><span class=\"p\">,</span>\n    <span class=\"p\">{</span><span class=\"s1\">&#39;time&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">]},</span>\n    <span class=\"n\">stdout_file</span><span class=\"o\">=</span><span class=\"s2\">&quot;output/timeouts.txt&quot;</span><span class=\"p\">,</span>\n    <span class=\"n\">allowed_return_codes</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">124</span><span class=\"p\">],</span>\n    <span class=\"n\">stdout_res</span><span class=\"o\">=</span><span class=\"k\">lambda</span> <span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"p\">(</span>\n        <span class=\"s2\">&quot;sleeping [[time]]s -&gt; [[stdout]]&quot;</span> <span class=\"k\">if</span> <span class=\"n\">args</span><span class=\"p\">[</span><span class=\"s1\">&#39;stdout&#39;</span><span class=\"p\">]</span> <span class=\"o\">!=</span> <span class=\"s2\">&quot;&quot;</span> <span class=\"k\">else</span>\n        <span class=\"s2\">&quot;sleeping [[time]]s -&gt; timeout&quot;</span><span class=\"p\">)</span>\n<span class=\"p\">)</span>\n</code></pre>\n</div>\n\n<p>This produces the following file.</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code>$ cat output/timeouts.txt \nsleeping 0s -&gt; waking up\nsleeping 1s -&gt; waking up\nsleeping 3s -&gt; timeout\nsleeping 4s -&gt; timeout\nsleeping 2s -&gt; timeout\n</code></pre>\n</div>\n\n<p>The above example relies on the fact that the standard output is the\nempty string in case of an error.  The following yields the same\nresult but explicitly checks for the return code using <code>stdout_mod</code>\ninstead of <code>stdout_res</code>.</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"n\">run</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span>\n    <span class=\"s2\">&quot;timeouts&quot;</span><span class=\"p\">,</span>\n    <span class=\"s2\">&quot;timeout 2 sleep [[time]] &amp;&amp; echo waking up&quot;</span><span class=\"p\">,</span>\n    <span class=\"p\">{</span><span class=\"s2\">&quot;time&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">]},</span>\n    <span class=\"n\">stdout_file</span><span class=\"o\">=</span><span class=\"s2\">&quot;output/timeouts.txt&quot;</span><span class=\"p\">,</span>\n    <span class=\"n\">allowed_return_codes</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">124</span><span class=\"p\">],</span>\n    <span class=\"n\">stdout_mod</span><span class=\"o\">=</span><span class=\"k\">lambda</span> <span class=\"n\">out</span><span class=\"p\">,</span> <span class=\"n\">res</span><span class=\"p\">:</span> <span class=\"p\">(</span>\n        <span class=\"s2\">&quot;sleeping [[time]]s -&gt; [[stdout]]&quot;</span>\n        <span class=\"k\">if</span> <span class=\"n\">res</span><span class=\"o\">.</span><span class=\"n\">returncode</span> <span class=\"o\">==</span> <span class=\"mi\">0</span>\n        <span class=\"k\">else</span> <span class=\"s2\">&quot;sleeping [[time]]s -&gt; timeout&quot;</span>\n    <span class=\"p\">),</span>\n<span class=\"p\">)</span>\n</code></pre>\n</div>\n\n<p>In the above example, one could also use the parameter <code>out</code>\ndirectly instead of using the wildcard <code>[[stdout]]</code>.</p>\n\n<h1 id=\"miscellaneous-features\">Miscellaneous Features</h1>\n\n<p>There are some features that are not at the core of <code>run</code> in the sense\nthat they are independent of how you specify your experiments.\nNonetheless they are pretty useful and should be mentioned here.</p>\n\n<h2 id=\"experiment-names-and-groups\">Experiment Names and Groups</h2>\n\n<p>When running the experiment script with all examples from above by\ncalling <code>python example.py create_files calculate</code>, the output looks\nsomewhat like this:</p>\n\n<p><img src=\"example_run_1.png\" alt=\"Example Run 1\" /></p>\n\n<p>You can see that a bunch of experiments are available.  The two\nselected ones are highlighted in green (here <code>create_files</code> and\n<code>calculate</code>), all others are red.</p>\n\n<p>To select which experiments to run more conveniently, you can group\nexperiments using the <code>run.group()</code> function as follows.</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"c1\"># example.py</span>\n<span class=\"kn\">import</span> <span class=\"nn\">run</span>\n\n<span class=\"n\">run</span><span class=\"o\">.</span><span class=\"n\">group</span><span class=\"p\">(</span><span class=\"s2\">&quot;group_name_a&quot;</span><span class=\"p\">)</span>\n<span class=\"n\">run</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"s2\">&quot;exp1&quot;</span><span class=\"p\">,</span> <span class=\"o\">...</span><span class=\"p\">)</span>\n<span class=\"n\">run</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"s2\">&quot;exp2&quot;</span><span class=\"p\">,</span> <span class=\"o\">...</span><span class=\"p\">)</span>\n<span class=\"o\">...</span>\n<span class=\"n\">run</span><span class=\"o\">.</span><span class=\"n\">group</span><span class=\"p\">(</span><span class=\"s2\">&quot;group_name_b&quot;</span><span class=\"p\">)</span>\n<span class=\"n\">run</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"s2\">&quot;exp3&quot;</span><span class=\"p\">,</span> <span class=\"o\">...</span><span class=\"p\">)</span>\n<span class=\"n\">run</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"s2\">&quot;exp4&quot;</span><span class=\"p\">,</span> <span class=\"o\">...</span><span class=\"p\">)</span>\n<span class=\"o\">...</span>\n<span class=\"n\">run</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">()</span>\n</code></pre>\n</div>\n\n<p>By running the script with a group name as parameter, all experiments\nin that group are run, e.g., <code>python example.py group_name_a</code> runs\nthe experiments \"exp1\" and \"exp2\".</p>\n\n<p>Experiment names are of course also blobs, so you can do the following\nto create experiments with four different names in one group by\ncalling <code>run.add()</code> just once.</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"n\">res_name</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s1\">&#39;+&#39;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;sum&quot;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;-&#39;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;diff&quot;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;*&#39;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;prod&quot;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;/&#39;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;quot&quot;</span><span class=\"p\">}</span>\n<span class=\"n\">run</span><span class=\"o\">.</span><span class=\"n\">group</span><span class=\"p\">(</span><span class=\"s2\">&quot;calculations&quot;</span><span class=\"p\">)</span>\n<span class=\"n\">run</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span>\n    <span class=\"s2\">&quot;calculate_[[op_name]]&quot;</span><span class=\"p\">,</span>\n    <span class=\"s2\">&quot;echo $(([[a]] [[operator]] [[b]]))&quot;</span><span class=\"p\">,</span>\n    <span class=\"p\">{</span><span class=\"s1\">&#39;a&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">],</span> <span class=\"s1\">&#39;b&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">],</span>\n     <span class=\"s1\">&#39;operator&#39;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s2\">&quot;+&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;-&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;*&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;/&quot;</span><span class=\"p\">],</span>\n     <span class=\"s1\">&#39;op_name&#39;</span><span class=\"p\">:</span> <span class=\"k\">lambda</span> <span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"n\">res_name</span><span class=\"p\">[</span><span class=\"n\">args</span><span class=\"p\">[</span><span class=\"s1\">&#39;operator&#39;</span><span class=\"p\">]]</span>\n     <span class=\"p\">},</span>\n    <span class=\"n\">stdout_file</span><span class=\"o\">=</span><span class=\"s2\">&quot;output/result_[[op_name]].txt&quot;</span><span class=\"p\">,</span><span class=\"mi\">1</span>\n    <span class=\"n\">stdout_res</span><span class=\"o\">=</span><span class=\"s2\">&quot;[[a]] [[operator]] [[b]] = [[stdout]]&quot;</span>\n<span class=\"p\">)</span>\n</code></pre>\n</div>\n\n<p>Adding some more groups and calling <code>python example.py sum\nsum_of_squares calculations</code> yields the following output.</p>\n\n<p><img src=\"example_run_2.png\" alt=\"Example Run 1\" /></p>\n\n<h2 id=\"parallelization\">Parallelization</h2>\n\n<p>Runs from the same experiment are run in parallel and you can choose\nhow many threads to use by calling <code>run.use_cores(nr_cores)</code>.  By\ndefault, <code>4</code> cores are used.</p>\n\n<p><strong>Note:</strong> There is no parallelization between different experiments,\ni.e., in the above example, all runs from <code>sum</code> have to finish\nbefore the runs of <code>sum_of_squares</code> start.</p>\n\n<p><strong>Note:</strong> Files are locked for writing, i.e., it is ok for multiple\nruns of the same experiment to write to the same file.  It is also\nmade sure that the header is written only once.  If you abort an\nexperiment by interrupting it with <code>ctrl + c</code> there might be a\nleftover <code>*.lock</code> file, which you have to remove manually.</p>\n\n<h2 id=\"return-string\">Return String</h2>\n\n<p>The method <code>run.add()</code> can return a list of strings, one for each\nrun.  This can, e.g., be helpful if each run of the experiment\ngenerates a file and you want to perform an additional task on each of\nthese files in a later experiment.</p>\n\n<p>To use this feature, set the parameter <code>return_string</code> of\n<code>run.add()</code>.  It is a blob.</p>\n\n<h2 id=\"dry-run\">Dry Run</h2>\n\n<p>If you execute your experiment script with <code>dry_run</code> as parameter,\nthe runs are not executed.  Instead it is printed to <code>stdout</code> which\nruns would have been called.</p>\n\n<h2 id=\"creating-directories\">Creating Directories</h2>\n\n<p>If you use <code>stdout_file</code> and the directory where the output file\nshould be stored does not exist, it is created.</p>\n\n<h2 id=\"multiple-runs-in-one-script\">Multiple Runs in One Script</h2>\n\n<p>You can call <code>run.run()</code> multiple times in one script.  Each call\nafter the first considers only the runs added after the previous call.\nThis is useful when there are some experiments that create files and\nthen later experiments do something for each file created earlier.\nThis is demonstrated in the following example, where <code>create_files</code>\ncreates some <code>.txt</code> files while <code>copy_files</code> copies all <code>.txt</code>\nfiles that are found by\n<a href=\"https://docs.python.org/3/library/glob.html#glob.glob\"><code>glob.glob(\"output/*.txt\")</code></a>.</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"n\">run</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span>\n    <span class=\"s2\">&quot;create_files&quot;</span><span class=\"p\">,</span>\n    <span class=\"s2\">&quot;touch [[file]]&quot;</span><span class=\"p\">,</span>\n    <span class=\"p\">{</span><span class=\"s2\">&quot;a&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">],</span> <span class=\"s2\">&quot;b&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">],</span> <span class=\"s2\">&quot;c&quot;</span><span class=\"p\">:</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"s2\">&quot;file&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;output/a=[[a]]_b=[[b]]_c=[[c]].txt&quot;</span><span class=\"p\">},</span>\n    <span class=\"n\">creates_file</span><span class=\"o\">=</span><span class=\"s2\">&quot;[[file]]&quot;</span><span class=\"p\">,</span>\n<span class=\"p\">)</span>\n<span class=\"n\">run</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">()</span>\n\n<span class=\"kn\">import</span> <span class=\"nn\">glob</span>\n<span class=\"n\">files</span> <span class=\"o\">=</span> <span class=\"n\">glob</span><span class=\"o\">.</span><span class=\"n\">glob</span><span class=\"p\">(</span><span class=\"s2\">&quot;output/*.txt&quot;</span><span class=\"p\">)</span>\n\n<span class=\"n\">run</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span>\n    <span class=\"s2\">&quot;copy_files&quot;</span><span class=\"p\">,</span>\n    <span class=\"s2\">&quot;cp [[file]] [[copy]]&quot;</span><span class=\"p\">,</span>\n    <span class=\"p\">{</span><span class=\"s2\">&quot;file&quot;</span><span class=\"p\">:</span> <span class=\"n\">files</span><span class=\"p\">,</span> <span class=\"s2\">&quot;copy&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;[[file]].copy&quot;</span><span class=\"p\">},</span>\n    <span class=\"n\">creates_file</span><span class=\"o\">=</span><span class=\"s2\">&quot;[[copy]]&quot;</span><span class=\"p\">,</span>\n<span class=\"p\">)</span>\n<span class=\"n\">run</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">()</span>\n</code></pre>\n</div>\n\n<p>Without the first call to <code>run.run()</code>,\n<a href=\"https://docs.python.org/3/library/glob.html#glob.glob\"><code>glob.glob()</code></a>\nwould not find the files created by <code>create_file</code> as they are not\nyet created.  Thus, one would have to call the script twice to do both\nexperiments.  With the additional call to <code>run.run()</code>, one can run\n<code>create_files</code> and <code>copy_files</code> in one execution of the script.</p>\n\n<h2 id=\"section-headlines\">Section Headlines</h2>\n\n<p>You can call <code>run.section()</code> to print a section title (e.g., to\nstructure the output in case of multiple run calls).</p>\n\n<h1 id=\"interface-documentationrunhtml\"><a href=\"./run.html\">Interface Documentation</a></h1>\n"}}, "docInfo": {"run": {"qualname": 0, "fullname": 1, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 45}, "run.add": {"qualname": 1, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 181, "bases": 0, "doc": 902}, "run.run": {"qualname": 1, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 7, "bases": 0, "doc": 51}, "run.use_cores": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 12, "bases": 0, "doc": 37}, "run.group": {"qualname": 1, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 12, "bases": 0, "doc": 51}, "run.section": {"qualname": 1, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 28}, "run.deblob": {"qualname": 1, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 177}, "index": {"qualname": 0, "fullname": 1, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 7223}}, "length": 8, "save": true}, "index": {"qualname": {"root": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "d": {"docs": {"run.add": {"tf": 1}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {"run.run": {"tf": 1}}, "df": 1}}}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"run.use_cores": {"tf": 1}}, "df": 1}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"run.use_cores": {"tf": 1}}, "df": 1}}}}}, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "p": {"docs": {"run.group": {"tf": 1}}, "df": 1}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"run.section": {"tf": 1}}, "df": 1}}}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "b": {"docs": {"run.deblob": {"tf": 1}}, "df": 1}}}}}}}}, "fullname": {"root": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {"run": {"tf": 1}, "run.add": {"tf": 1}, "run.run": {"tf": 1.4142135623730951}, "run.use_cores": {"tf": 1}, "run.group": {"tf": 1}, "run.section": {"tf": 1}, "run.deblob": {"tf": 1}}, "df": 7}}}, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "d": {"docs": {"run.add": {"tf": 1}}, "df": 1}}}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"run.use_cores": {"tf": 1}}, "df": 1}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"run.use_cores": {"tf": 1}}, "df": 1}}}}}, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "p": {"docs": {"run.group": {"tf": 1}}, "df": 1}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"run.section": {"tf": 1}}, "df": 1}}}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "b": {"docs": {"run.deblob": {"tf": 1}}, "df": 1}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {"index": {"tf": 1}}, "df": 1}}}}}}}, "annotation": {"root": {"docs": {}, "df": 0}}, "default_value": {"root": {"docs": {}, "df": 0}}, "signature": {"root": {"0": {"docs": {"run.add": {"tf": 1}}, "df": 1}, "docs": {"run.add": {"tf": 11.61895003862225}, "run.run": {"tf": 2.6457513110645907}, "run.use_cores": {"tf": 3.1622776601683795}, "run.group": {"tf": 3.1622776601683795}, "run.section": {"tf": 3.1622776601683795}, "run.deblob": {"tf": 3.7416573867739413}}, "df": 6, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"run.add": {"tf": 1}, "run.group": {"tf": 1}}, "df": 2}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"run.add": {"tf": 2.449489742783178}}, "df": 1}}}, "r": {"docs": {"run.use_cores": {"tf": 1}}, "df": 1}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"run.add": {"tf": 1.4142135623730951}}, "df": 1}}}}, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"run.add": {"tf": 1}}, "df": 1}}}}}}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"run.add": {"tf": 1}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"run.use_cores": {"tf": 1}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"run.add": {"tf": 1}}, "df": 1}}}}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"run.add": {"tf": 1}}, "df": 1}}}}}}, "s": {"docs": {"run.deblob": {"tf": 1}}, "df": 1}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"run.add": {"tf": 1}}, "df": 1}}}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "r": {"docs": {"run.add": {"tf": 1}}, "df": 1}}}}}, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"run.add": {"tf": 1.4142135623730951}}, "df": 1}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"run.add": {"tf": 1}}, "df": 1}}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"run.add": {"tf": 1.7320508075688772}}, "df": 1}}}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"run.add": {"tf": 1.7320508075688772}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"run.add": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {"run.add": {"tf": 1.4142135623730951}}, "df": 1}}}, "l": {"docs": {}, "df": 0, "t": {"docs": {"run.add": {"tf": 2}}, "df": 1}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {"run.add": {"tf": 1}}, "df": 1}}}}}}, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"run.add": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}, "g": {"docs": {}, "df": 0, "t": {"docs": {"run.add": {"tf": 2}}, "df": 1}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "p": {"docs": {"run.group": {"tf": 1}}, "df": 1}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"run.add": {"tf": 1}}, "df": 1}, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {"run.add": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"run.add": {"tf": 1.7320508075688772}}, "df": 1}}}}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"run.section": {"tf": 1}}, "df": 1}}}}}, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "b": {"docs": {"run.deblob": {"tf": 1}}, "df": 1}}}}}}, "bases": {"root": {"docs": {}, "df": 0}}, "doc": {"root": {"0": {"docs": {"run.add": {"tf": 1}, "index": {"tf": 4.898979485566356}}, "df": 2, "s": {"docs": {"index": {"tf": 1}}, "df": 1}}, "1": {"2": {"4": {"docs": {"index": {"tf": 2.23606797749979}}, "df": 1}, "docs": {}, "df": 0}, "docs": {"run.deblob": {"tf": 1}, "index": {"tf": 4.69041575982343}}, "df": 2, "s": {"docs": {"index": {"tf": 1}}, "df": 1}}, "2": {"docs": {"index": {"tf": 4.898979485566356}}, "df": 1, "s": {"docs": {"index": {"tf": 1}}, "df": 1}}, "3": {"9": {"docs": {"index": {"tf": 10.862780491200215}}, "df": 1}, "docs": {"run.deblob": {"tf": 1}, "index": {"tf": 3.605551275463989}}, "df": 2, "s": {"docs": {"index": {"tf": 1}}, "df": 1}}, "4": {"docs": {"index": {"tf": 3.7416573867739413}}, "df": 1, "s": {"docs": {"index": {"tf": 1}}, "df": 1}}, "5": {"docs": {"index": {"tf": 2.8284271247461903}}, "df": 1}, "6": {"docs": {"index": {"tf": 1}}, "df": 1}, "docs": {"run": {"tf": 2.8284271247461903}, "run.add": {"tf": 13.076696830622021}, "run.run": {"tf": 3.605551275463989}, "run.use_cores": {"tf": 3.872983346207417}, "run.group": {"tf": 4.58257569495584}, "run.section": {"tf": 3.872983346207417}, "run.deblob": {"tf": 7.810249675906654}, "index": {"tf": 56.20498198558558}}, "df": 8, "a": {"docs": {"run": {"tf": 1.7320508075688772}, "run.add": {"tf": 5.830951894845301}, "run.section": {"tf": 1}, "run.deblob": {"tf": 2.8284271247461903}, "index": {"tf": 11.135528725660043}}, "df": 5, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"run.add": {"tf": 2.449489742783178}, "run.deblob": {"tf": 1.4142135623730951}, "index": {"tf": 4.123105625617661}}, "df": 3, "s": {"docs": {"run": {"tf": 1}, "run.add": {"tf": 3.4641016151377544}, "run.deblob": {"tf": 1}, "index": {"tf": 4.58257569495584}}, "df": 4}}}}}}, "s": {"docs": {"run.deblob": {"tf": 1.7320508075688772}, "index": {"tf": 4.69041575982343}}, "df": 2}}, "e": {"docs": {"run.add": {"tf": 1.7320508075688772}, "run.run": {"tf": 1}, "index": {"tf": 6.6332495807108}}, "df": 3}}, "l": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {"run": {"tf": 1}, "run.add": {"tf": 1}, "index": {"tf": 2.8284271247461903}}, "df": 3}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "y": {"docs": {"run.add": {"tf": 1.4142135623730951}, "index": {"tf": 2.449489742783178}}, "df": 2}}}}}, "l": {"docs": {"index": {"tf": 4.123105625617661}}, "df": 1, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"run.add": {"tf": 1.4142135623730951}, "index": {"tf": 2.8284271247461903}}, "df": 2}}, "s": {"docs": {"index": {"tf": 1}}, "df": 1}}}}, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "s": {"docs": {"run.add": {"tf": 1.4142135623730951}, "index": {"tf": 1}}, "df": 2}}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"index": {"tf": 1}}, "df": 1}}}}, "g": {"docs": {}, "df": 0, "o": {"1": {"docs": {"index": {"tf": 1.4142135623730951}}, "df": 1}, "2": {"docs": {"index": {"tf": 1.4142135623730951}}, "df": 1}, "docs": {"index": {"tf": 4}}, "df": 1, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "m": {"docs": {"index": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "s": {"docs": {"index": {"tf": 1}}, "df": 1}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"index": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "d": {"docs": {}, "df": 0, "d": {"docs": {"run.add": {"tf": 1}, "run.group": {"tf": 1}, "index": {"tf": 5.385164807134504}}, "df": 3, "e": {"docs": {}, "df": 0, "d": {"docs": {"run.add": {"tf": 1.4142135623730951}, "run.group": {"tf": 1}, "index": {"tf": 1.7320508075688772}}, "df": 3}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"run.add": {"tf": 1}, "index": {"tf": 1.7320508075688772}}, "df": 2, "l": {"docs": {}, "df": 0, "y": {"docs": {"index": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}, "n": {"docs": {}, "df": 0, "g": {"docs": {"index": {"tf": 1.4142135623730951}}, "df": 1}}}, "s": {"docs": {"index": {"tf": 1}}, "df": 1}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"index": {"tf": 1}}, "df": 1, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {"index": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}}}}, "n": {"docs": {"run.add": {"tf": 2}, "index": {"tf": 3.605551275463989}}, "df": 2, "d": {"docs": {"run.add": {"tf": 2.6457513110645907}, "index": {"tf": 6.708203932499369}}, "df": 2}, "y": {"docs": {"run.add": {"tf": 1.7320508075688772}, "index": {"tf": 1.4142135623730951}}, "df": 2}}, "s": {"docs": {"run.add": {"tf": 2.6457513110645907}, "run.run": {"tf": 1}, "run.deblob": {"tf": 1}, "index": {"tf": 4.58257569495584}}, "df": 4, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"index": {"tf": 1.7320508075688772}}, "df": 1, "s": {"docs": {"run.deblob": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "n": {"docs": {"index": {"tf": 1}}, "df": 1}}}}}, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"run.add": {"tf": 1}, "index": {"tf": 1.7320508075688772}}, "df": 2}}, "r": {"docs": {}, "df": 0, "t": {"docs": {"index": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "d": {"docs": {"run.add": {"tf": 1}, "index": {"tf": 1}}, "df": 2}}, "s": {"docs": {"index": {"tf": 1}}, "df": 1}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {"index": {"tf": 3.3166247903554}}, "df": 1}}}}, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {"index": {"tf": 1.4142135623730951}}, "df": 1, "s": {"docs": {"run.add": {"tf": 1}}, "df": 1}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"run.add": {"tf": 1}}, "df": 1}}}}}}, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"index": {"tf": 1}}, "df": 1}}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"run.add": {"tf": 1.4142135623730951}, "index": {"tf": 1}}, "df": 2}}}, "y": {"docs": {"run.deblob": {"tf": 1}}, "df": 1}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"index": {"tf": 1}}, "df": 1}}}}}}}}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"run.add": {"tf": 1}}, "df": 1}}}, "p": {"docs": {"index": {"tf": 2.449489742783178}}, "df": 1}}, "t": {"docs": {"run.add": {"tf": 1.7320508075688772}, "run.run": {"tf": 1}, "index": {"tf": 2.6457513110645907}}, "df": 3}, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"index": {"tf": 1.4142135623730951}}, "df": 1, "l": {"docs": {}, "df": 0, "y": {"docs": {"run.add": {"tf": 1}}, "df": 1}}}}}}, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"run.add": {"tf": 1}, "index": {"tf": 1.4142135623730951}}, "df": 2}}, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"run.add": {"tf": 1}, "index": {"tf": 1}}, "df": 2}}}}}}, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"index": {"tf": 1.4142135623730951}}, "df": 1, "d": {"docs": {"index": {"tf": 1}}, "df": 1}}}}}}}, "f": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"run.add": {"tf": 1.4142135623730951}, "index": {"tf": 2.449489742783178}}, "df": 2}}}}, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"index": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "g": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"index": {"tf": 1}}, "df": 1}}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"index": {"tf": 1}}, "df": 1}}}}}}}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {"run.add": {"tf": 1.7320508075688772}, "index": {"tf": 2.8284271247461903}}, "df": 2, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"run": {"tf": 1}, "index": {"tf": 1.4142135623730951}}, "df": 2}}}, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"run.add": {"tf": 1}, "index": {"tf": 1.4142135623730951}}, "df": 2}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {"run.add": {"tf": 1}, "index": {"tf": 3.1622776601683795}}, "df": 2, "o": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"index": {"tf": 2.449489742783178}}, "df": 1}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"index": {"tf": 1}}, "df": 1}}, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"index": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"run.add": {"tf": 1}}, "df": 1}}, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {"run.deblob": {"tf": 1}, "index": {"tf": 1.4142135623730951}}, "df": 2}}}, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {"index": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {"run.add": {"tf": 1}, "index": {"tf": 1.4142135623730951}}, "df": 2}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"run.deblob": {"tf": 1}}, "df": 1}, "s": {"docs": {"index": {"tf": 1}}, "df": 1}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"index": {"tf": 1}}, "df": 1}}}}}, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"index": {"tf": 1}}, "df": 1}}}}}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"index": {"tf": 1}}, "df": 1}}}}}}, "y": {"docs": {"index": {"tf": 1}}, "df": 1}, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"index": {"tf": 1}}, "df": 1}}}}}}, "k": {"docs": {}, "df": 0, "e": {"docs": {"index": {"tf": 2}}, "df": 1, "s": {"docs": {"index": {"tf": 1}}, "df": 1}}}, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"index": {"tf": 1}}, "df": 1}}}}}, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"index": {"tf": 1}}, "df": 1}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {"index": {"tf": 1}}, "df": 1}}}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"index": {"tf": 2.8284271247461903}}, "df": 1}}}}}}, "c": {"docs": {}, "df": 0, "h": {"docs": {"index": {"tf": 1}}, "df": 1}}}}, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"run": {"tf": 1}, "run.add": {"tf": 2.23606797749979}, "run.group": {"tf": 1}, "run.deblob": {"tf": 1}, "index": {"tf": 6}}, "df": 5, "m": {"docs": {"run.add": {"tf": 1}, "run.deblob": {"tf": 1.4142135623730951}, "index": {"tf": 2}}, "df": 3, "e": {"docs": {}, "df": 0, "r": {"docs": {"index": {"tf": 1}}, "df": 1}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"run.deblob": {"tf": 1}, "index": {"tf": 4}}, "df": 2}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"index": {"tf": 1}}, "df": 1}}, "s": {"docs": {"index": {"tf": 1}}, "df": 1}}}}}, "u": {"docs": {}, "df": 0, "r": {"docs": {"index": {"tf": 1.4142135623730951}}, "df": 1}, "n": {"docs": {}, "df": 0, "d": {"docs": {"index": {"tf": 1}}, "df": 1}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"run.add": {"tf": 3.3166247903554}, "run.group": {"tf": 1}, "run.deblob": {"tf": 1.4142135623730951}, "index": {"tf": 3.872983346207417}}, "df": 4, "s": {"docs": {"index": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"1": {"docs": {"index": {"tf": 1.4142135623730951}}, "df": 1}, "2": {"docs": {"index": {"tf": 1.4142135623730951}}, "df": 1}, "3": {"docs": {"index": {"tf": 1.4142135623730951}}, "df": 1}, "docs": {"run.add": {"tf": 3.605551275463989}, "run.run": {"tf": 1}, "index": {"tf": 8.660254037844387}}, "df": 3, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"run.add": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {"index": {"tf": 5.385164807134504}}, "df": 1}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"run.add": {"tf": 1}, "index": {"tf": 2.23606797749979}}, "df": 2, "s": {"docs": {"run.add": {"tf": 1}}, "df": 1}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"index": {"tf": 1}}, "df": 1}}}}}}}, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "h": {"docs": {"index": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "d": {"docs": {"run.add": {"tf": 1}}, "df": 1}}}}}, "d": {"docs": {"index": {"tf": 1}}, "df": 1}}, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"index": {"tf": 2.8284271247461903}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"run.add": {"tf": 1}}, "df": 1}}}, "c": {"docs": {}, "df": 0, "t": {"docs": {"index": {"tf": 1.4142135623730951}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {"index": {"tf": 2.449489742783178}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"index": {"tf": 1}}, "df": 1, "s": {"docs": {"index": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {"run.add": {"tf": 4.47213595499958}, "run.run": {"tf": 1.4142135623730951}, "run.use_cores": {"tf": 1}, "run.deblob": {"tf": 1}, "index": {"tf": 9.591663046625438}}, "df": 5, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"run": {"tf": 1}, "index": {"tf": 2.6457513110645907}}, "df": 2}}}}, "s": {"docs": {"run.add": {"tf": 1.4142135623730951}, "run.run": {"tf": 1}, "index": {"tf": 5.477225575051661}}, "df": 3}}, "l": {"docs": {}, "df": 0, "e": {"docs": {"index": {"tf": 1.4142135623730951}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"run": {"tf": 1}, "index": {"tf": 1}}, "df": 2}}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"index": {"tf": 1}}, "df": 1, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"index": {"tf": 1.4142135623730951}}, "df": 1}}}}, "s": {"docs": {"index": {"tf": 1}}, "df": 1}}}}}}}, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"run.add": {"tf": 1}}, "df": 1}}, "s": {"docs": {"run.add": {"tf": 1}}, "df": 1}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"index": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"run.add": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"index": {"tf": 1}}, "df": 1, "s": {"docs": {"run.add": {"tf": 1}}, "df": 1}}}}}, "d": {"docs": {"run.add": {"tf": 1}, "run.deblob": {"tf": 1}, "index": {"tf": 2}}, "df": 3}, "s": {"docs": {"index": {"tf": 1}}, "df": 1}}}}}}, "s": {"docs": {"run.add": {"tf": 1.4142135623730951}, "index": {"tf": 4.358898943540674}}, "df": 2, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"run.add": {"tf": 1}, "run.deblob": {"tf": 1}, "index": {"tf": 2.6457513110645907}}, "df": 3, "s": {"docs": {"run.add": {"tf": 1}, "index": {"tf": 1.4142135623730951}}, "df": 2}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"index": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"index": {"tf": 1}}, "df": 1}}}}}}}}, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {"run.add": {"tf": 2.8284271247461903}, "index": {"tf": 4.47213595499958}}, "df": 2, "e": {"docs": {}, "df": 0, "d": {"docs": {"run.add": {"tf": 1}}, "df": 1}}, "s": {"docs": {"run.add": {"tf": 1.7320508075688772}, "index": {"tf": 1.4142135623730951}}, "df": 2}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"run.add": {"tf": 1}, "index": {"tf": 1}}, "df": 2}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"index": {"tf": 1}}, "df": 1}}}}}}}}, "a": {"docs": {}, "df": 0, "d": {"docs": {"index": {"tf": 1}}, "df": 1, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"index": {"tf": 1}}, "df": 1}}}}}}, "j": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"index": {"tf": 1}}, "df": 1}}}}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"index": {"tf": 1.4142135623730951}}, "df": 1}}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"index": {"tf": 1}}, "df": 1}}}}}, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {"index": {"tf": 1}}, "df": 1}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"index": {"tf": 1}}, "df": 1}}}}, "d": {"docs": {"index": {"tf": 1}}, "df": 1}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"index": {"tf": 2.449489742783178}}, "df": 1}}}}}, "e": {"docs": {"run.add": {"tf": 2}, "index": {"tf": 4.47213595499958}}, "df": 2, "x": {"docs": {}, "df": 0, "p": {"1": {"docs": {"index": {"tf": 1.4142135623730951}}, "df": 1}, "2": {"docs": {"index": {"tf": 1.4142135623730951}}, "df": 1}, "3": {"docs": {"index": {"tf": 1}}, "df": 1}, "4": {"docs": {"index": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"run.add": {"tf": 2}, "run.group": {"tf": 1}, "index": {"tf": 5.0990195135927845}}, "df": 3, "s": {"docs": {"run": {"tf": 1}, "run.add": {"tf": 1}, "run.run": {"tf": 1}, "run.use_cores": {"tf": 1}, "index": {"tf": 4.123105625617661}}, "df": 5}}}}}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"run": {"tf": 1}, "index": {"tf": 1}}, "df": 2}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"index": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"index": {"tf": 1}}, "df": 1, "l": {"docs": {}, "df": 0, "y": {"docs": {"index": {"tf": 1.7320508075688772}}, "df": 1}}}}}}}}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"run": {"tf": 1}, "index": {"tf": 1.4142135623730951}}, "df": 2}}, "n": {"docs": {}, "df": 0, "g": {"docs": {"run.add": {"tf": 1}, "index": {"tf": 2}}, "df": 2}}}, "e": {"docs": {"index": {"tf": 1.7320508075688772}}, "df": 1, "d": {"docs": {"run.run": {"tf": 1}, "index": {"tf": 2}}, "df": 2}}, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"index": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"index": {"tf": 5.291502622129181}}, "df": 1, "s": {"docs": {"run": {"tf": 1}, "index": {"tf": 1.7320508075688772}}, "df": 2}}}}}, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"run.run": {"tf": 1}, "index": {"tf": 1.4142135623730951}}, "df": 2}}}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"run.add": {"tf": 1}, "index": {"tf": 2.23606797749979}}, "df": 2, "s": {"docs": {"run.add": {"tf": 2}, "index": {"tf": 2.23606797749979}}, "df": 2}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"index": {"tf": 1}}, "df": 1}}}}}}, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {"index": {"tf": 1}}, "df": 1}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"index": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"run.add": {"tf": 2.449489742783178}, "run.group": {"tf": 1}, "index": {"tf": 4.69041575982343}}, "df": 3}}, "s": {"docs": {}, "df": 0, "y": {"docs": {"index": {"tf": 1}}, "df": 1}, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"index": {"tf": 1}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"index": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"run.add": {"tf": 2.23606797749979}, "index": {"tf": 1}}, "df": 2}, "s": {"docs": {"index": {"tf": 1.4142135623730951}}, "df": 1}}, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"index": {"tf": 1}}, "df": 1}}}}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"run.add": {"tf": 1}, "run.deblob": {"tf": 1.4142135623730951}, "index": {"tf": 1.4142135623730951}}, "df": 3, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"index": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}, "n": {"docs": {"index": {"tf": 2}}, "df": 1}}, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"index": {"tf": 1}}, "df": 1}}}}}}, "n": {"docs": {}, "df": 0, "d": {"docs": {"run.add": {"tf": 1}, "run.run": {"tf": 1}, "index": {"tf": 1}}, "df": 3}}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"run.add": {"tf": 1}, "index": {"tf": 1}}, "df": 2}}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"index": {"tf": 1}}, "df": 1}}}}}}}}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"index": {"tf": 1}}, "df": 1}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {"index": {"tf": 1.4142135623730951}}, "df": 1}}}, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {"index": {"tf": 3.1622776601683795}}, "df": 1}}}, "f": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"index": {"tf": 1}}, "df": 1}}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"index": {"tf": 1}}, "df": 1}}}}}, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"index": {"tf": 2}}, "df": 1, "s": {"docs": {"index": {"tf": 1}}, "df": 1}}}}}}, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"run": {"tf": 1}, "run.add": {"tf": 3}, "run.use_cores": {"tf": 1}, "run.section": {"tf": 1}, "run.deblob": {"tf": 1.4142135623730951}, "index": {"tf": 6.082762530298219}}, "df": 6}}, "e": {"docs": {"run": {"tf": 1.4142135623730951}, "run.add": {"tf": 7.874007874011811}, "run.run": {"tf": 2.23606797749979}, "run.use_cores": {"tf": 1.7320508075688772}, "run.group": {"tf": 2}, "run.section": {"tf": 1}, "run.deblob": {"tf": 3}, "index": {"tf": 16.24807680927192}}, "df": 8, "r": {"docs": {}, "df": 0, "e": {"docs": {"run": {"tf": 1}, "run.add": {"tf": 1}, "index": {"tf": 2.6457513110645907}}, "df": 3}}, "n": {"docs": {"run.add": {"tf": 1}, "run.run": {"tf": 1}, "index": {"tf": 2.8284271247461903}}, "df": 3}, "s": {"docs": {}, "df": 0, "e": {"docs": {"index": {"tf": 2}}, "df": 1}}, "i": {"docs": {}, "df": 0, "r": {"docs": {"index": {"tf": 2.23606797749979}}, "df": 1}}, "m": {"docs": {"index": {"tf": 1.4142135623730951}}, "df": 1, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"index": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}, "y": {"docs": {"index": {"tf": 2.449489742783178}}, "df": 1}}, "i": {"docs": {}, "df": 0, "s": {"docs": {"run": {"tf": 1}, "run.add": {"tf": 2.8284271247461903}, "run.run": {"tf": 1}, "run.group": {"tf": 1}, "run.deblob": {"tf": 1.4142135623730951}, "index": {"tf": 6.324555320336759}}, "df": 6}, "r": {"docs": {}, "df": 0, "d": {"docs": {"index": {"tf": 1.7320508075688772}}, "df": 1}}, "n": {"docs": {}, "df": 0, "g": {"docs": {"index": {"tf": 1}}, "df": 1, "s": {"docs": {"index": {"tf": 1}}, "df": 1}}}}, "u": {"docs": {}, "df": 0, "s": {"docs": {"run.add": {"tf": 1}, "index": {"tf": 3}}, "df": 2}, "m": {"docs": {}, "df": 0, "b": {"docs": {"index": {"tf": 1.4142135623730951}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {"run.add": {"tf": 1}, "index": {"tf": 2.23606797749979}}, "df": 2}, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {"index": {"tf": 1}}, "df": 1}}}}}, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"index": {"tf": 1.7320508075688772}}, "df": 1}}}}, "o": {"docs": {"run.add": {"tf": 4}, "run.run": {"tf": 1}, "run.use_cores": {"tf": 1}, "run.group": {"tf": 1}, "run.deblob": {"tf": 1}, "index": {"tf": 8.18535277187245}}, "df": 6, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"index": {"tf": 2.6457513110645907}}, "df": 1}}}}, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"run.add": {"tf": 1}}, "df": 1}, "e": {"docs": {}, "df": 0, "d": {"docs": {"run.deblob": {"tf": 1}, "index": {"tf": 1}}, "df": 2}}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "k": {"docs": {"run.add": {"tf": 1}}, "df": 1}}, "k": {"docs": {}, "df": 0, "e": {"docs": {"run.add": {"tf": 1.7320508075688772}}, "df": 1, "s": {"docs": {"run.add": {"tf": 1}, "index": {"tf": 1.7320508075688772}}, "df": 2}}}, "s": {"docs": {}, "df": 0, "k": {"docs": {"index": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"run.add": {"tf": 1.4142135623730951}, "index": {"tf": 2.6457513110645907}}, "df": 2, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"index": {"tf": 3}}, "df": 1, "s": {"docs": {"index": {"tf": 1.7320508075688772}}, "df": 1}}}}, "s": {"docs": {"index": {"tf": 1.4142135623730951}}, "df": 1}, "]": {"docs": {}, "df": 0, "]": {"docs": {}, "df": 0, "s": {"docs": {"index": {"tf": 2}}, "df": 1}}}}}, "t": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"run.section": {"tf": 1.7320508075688772}, "index": {"tf": 1}}, "df": 2}}}}, "w": {"docs": {}, "df": 0, "o": {"docs": {"run.add": {"tf": 1}, "index": {"tf": 2}}, "df": 2}, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"index": {"tf": 1}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {"run.add": {"tf": 1.7320508075688772}}, "df": 1}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "s": {"docs": {"run.deblob": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"run.deblob": {"tf": 1}}, "df": 1}}}}}}}}}, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"index": {"tf": 3.1622776601683795}}, "df": 1, "s": {"docs": {"index": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "y": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"index": {"tf": 1}}, "df": 1}}}}}, "x": {"docs": {}, "df": 0, "t": {"docs": {"index": {"tf": 5.291502622129181}}, "df": 1}}}, "i": {"docs": {"run.add": {"tf": 2}, "index": {"tf": 3.1622776601683795}}, "df": 2, "n": {"docs": {"run.add": {"tf": 2.8284271247461903}, "run.deblob": {"tf": 1.4142135623730951}, "index": {"tf": 7.14142842854285}}, "df": 3, "v": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"run": {"tf": 1}, "index": {"tf": 1}}, "df": 2, "s": {"docs": {"index": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {"index": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "t": {"docs": {"run.use_cores": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"run": {"tf": 1}, "index": {"tf": 1.4142135623730951}}, "df": 2}}}}, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"run.deblob": {"tf": 1}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"index": {"tf": 1}}, "df": 1}}}}}}}}, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"index": {"tf": 1.4142135623730951}}, "df": 1}}}}, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"index": {"tf": 1.4142135623730951}}, "df": 1}}}}, "o": {"docs": {"run.add": {"tf": 1}, "run.deblob": {"tf": 1.7320508075688772}, "index": {"tf": 2}}, "df": 3}}, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"run": {"tf": 1}}, "df": 1}}}}}}}, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"run.add": {"tf": 1}}, "df": 1}}}}}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"run.add": {"tf": 2.23606797749979}, "index": {"tf": 2}}, "df": 2}}}}}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"index": {"tf": 1}}, "df": 1, "s": {"docs": {"run.add": {"tf": 1}}, "df": 1}}}}}}, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"index": {"tf": 1}}, "df": 1}}}}}}}}}, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"run.add": {"tf": 1.4142135623730951}, "index": {"tf": 3}}, "df": 2}}}, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"run.add": {"tf": 1}}, "df": 1}}}}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"run.add": {"tf": 1}, "index": {"tf": 3.1622776601683795}}, "df": 2}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"index": {"tf": 1}}, "df": 1}}}}}}}}, "s": {"docs": {"run": {"tf": 1.4142135623730951}, "run.add": {"tf": 4.898979485566356}, "run.run": {"tf": 1}, "run.group": {"tf": 1}, "run.deblob": {"tf": 2.449489742783178}, "index": {"tf": 9.273618495495704}}, "df": 6}, "t": {"docs": {"run.add": {"tf": 3.4641016151377544}, "run.deblob": {"tf": 1.4142135623730951}, "index": {"tf": 4.898979485566356}}, "df": 3, "s": {"docs": {"run.add": {"tf": 1.7320508075688772}, "index": {"tf": 2.449489742783178}}, "df": 2, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "f": {"docs": {"run.add": {"tf": 1}, "run.deblob": {"tf": 1}, "index": {"tf": 2.23606797749979}}, "df": 3}}}}}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"run.add": {"tf": 1}, "index": {"tf": 1}}, "df": 2}}}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"index": {"tf": 1.7320508075688772}}, "df": 1}}}}}, "f": {"docs": {"run.add": {"tf": 3.1622776601683795}, "run.run": {"tf": 1}, "run.deblob": {"tf": 1.4142135623730951}, "index": {"tf": 6}}, "df": 4}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"run.add": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"index": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}}}, "g": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"index": {"tf": 1}}, "df": 1}}}}}}}, "o": {"docs": {}, "df": 0, "f": {"docs": {"run": {"tf": 1.7320508075688772}, "run.add": {"tf": 5.291502622129181}, "run.run": {"tf": 1}, "run.use_cores": {"tf": 1.4142135623730951}, "run.group": {"tf": 1}, "run.deblob": {"tf": 2}, "index": {"tf": 9.643650760992955}}, "df": 7}, "n": {"docs": {"run.add": {"tf": 1.7320508075688772}, "index": {"tf": 4.47213595499958}}, "df": 2, "l": {"docs": {}, "df": 0, "y": {"docs": {"run.add": {"tf": 1.7320508075688772}, "index": {"tf": 3.7416573867739413}}, "df": 2}}, "e": {"docs": {"run.add": {"tf": 1.7320508075688772}, "index": {"tf": 4.358898943540674}}, "df": 2, "s": {"docs": {"index": {"tf": 1}}, "df": 1}}, "c": {"docs": {}, "df": 0, "e": {"docs": {"run.run": {"tf": 1}, "index": {"tf": 1.4142135623730951}}, "df": 2}}}, "r": {"docs": {"run.add": {"tf": 2}, "run.deblob": {"tf": 1}, "index": {"tf": 3.605551275463989}}, "df": 3, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"run.add": {"tf": 1}, "index": {"tf": 2.449489742783178}}, "df": 2}}}, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"index": {"tf": 1}}, "df": 1}}}}}}}, "p": {"docs": {"index": {"tf": 1.7320508075688772}}, "df": 1, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"run.add": {"tf": 2.449489742783178}}, "df": 1}}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"index": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"index": {"tf": 3.1622776601683795}}, "df": 1, "s": {"docs": {"index": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}, "u": {"docs": {}, "df": 0, "t": {"docs": {"index": {"tf": 2}}, "df": 1, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"run.add": {"tf": 3}, "index": {"tf": 5.5677643628300215}}, "df": 2, "/": {"docs": {}, "df": 0, "a": {"docs": {"index": {"tf": 2}}, "df": 1}, "[": {"docs": {}, "df": 0, "[": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "]": {"docs": {}, "df": 0, "]": {"docs": {}, "df": 0, "+": {"docs": {}, "df": 0, "[": {"docs": {}, "df": 0, "[": {"docs": {}, "df": 0, "b": {"docs": {"index": {"tf": 1}}, "df": 1}}}}}}}}}, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {"index": {"tf": 1.4142135623730951}}, "df": 1, "s": {"docs": {"index": {"tf": 1.4142135623730951}}, "df": 1}}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"index": {"tf": 1.7320508075688772}}, "df": 1}}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"index": {"tf": 1}}, "df": 1}}}}}}}, "s": {"docs": {"index": {"tf": 2}}, "df": 1}}}}}}, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"run.add": {"tf": 1}, "index": {"tf": 2}}, "df": 2, "w": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"run.add": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {"index": {"tf": 1}}, "df": 1}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"index": {"tf": 1.4142135623730951}}, "df": 1}}}, "k": {"docs": {"index": {"tf": 1.7320508075688772}}, "df": 1}, "b": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"index": {"tf": 1}}, "df": 1}}}}}}}}, "c": {"docs": {"index": {"tf": 6.557438524302}}, "df": 1, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {"index": {"tf": 1}}, "df": 1, "n": {"docs": {}, "df": 0, "d": {"docs": {"run": {"tf": 1}, "run.add": {"tf": 3.1622776601683795}, "run.run": {"tf": 1}, "index": {"tf": 5}}, "df": 4, "s": {"docs": {"run": {"tf": 1}, "run.run": {"tf": 1}, "index": {"tf": 1.7320508075688772}}, "df": 3}}}}}, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"run.add": {"tf": 1.7320508075688772}, "index": {"tf": 2.23606797749979}}, "df": 2, "s": {"docs": {"run": {"tf": 1}, "run.add": {"tf": 1.4142135623730951}, "index": {"tf": 3.872983346207417}}, "df": 3}}}}}}, "e": {"docs": {"index": {"tf": 1}}, "df": 1}}}}, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"index": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {"index": {"tf": 1}}, "df": 1}}}}}, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {"run.add": {"tf": 1}}, "df": 1}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"run.add": {"tf": 1}, "run.deblob": {"tf": 1.4142135623730951}, "index": {"tf": 2}}, "df": 3}}}}}}}}}}, "e": {"docs": {"index": {"tf": 1.4142135623730951}}, "df": 1, "s": {"docs": {"run.use_cores": {"tf": 1.7320508075688772}, "index": {"tf": 1.7320508075688772}}, "df": 2}}}, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {"run.add": {"tf": 1}}, "df": 1, "s": {"docs": {"index": {"tf": 1}}, "df": 1}}}, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"index": {"tf": 1}}, "df": 1}}}}}}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {"run.add": {"tf": 1}}, "df": 1}}, "n": {"docs": {}, "df": 0, "t": {"docs": {"index": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"run.add": {"tf": 1}, "index": {"tf": 1}}, "df": 2, "s": {"docs": {"index": {"tf": 1.4142135623730951}}, "df": 1}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"index": {"tf": 1}}, "df": 1}}}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"run.deblob": {"tf": 1}, "index": {"tf": 1}}, "df": 2}}}}, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"index": {"tf": 1}}, "df": 1}}}}}}}}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"index": {"tf": 1}}, "df": 1, "s": {"docs": {"index": {"tf": 1}}, "df": 1}}}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {"run.add": {"tf": 1.7320508075688772}, "index": {"tf": 2.8284271247461903}}, "df": 2, "s": {"docs": {"run.add": {"tf": 1.4142135623730951}, "index": {"tf": 3}}, "df": 2}}}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"index": {"tf": 2}}, "df": 1}}, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"index": {"tf": 1}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"index": {"tf": 1.4142135623730951}}, "df": 1}}}}, "p": {"docs": {}, "df": 0, "y": {"docs": {"index": {"tf": 2.6457513110645907}}, "df": 1}, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"index": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {"run.add": {"tf": 2}, "index": {"tf": 5.744562646538029}}, "df": 2}, "s": {"docs": {}, "df": 0, "e": {"docs": {"run.add": {"tf": 1.4142135623730951}, "index": {"tf": 2.8284271247461903}}, "df": 2, "s": {"docs": {"run.add": {"tf": 1}, "index": {"tf": 1.4142135623730951}}, "df": 2}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {"run.add": {"tf": 1}, "run.run": {"tf": 1}, "index": {"tf": 2.8284271247461903}}, "df": 3, "e": {"docs": {}, "df": 0, "d": {"docs": {"run.add": {"tf": 1.4142135623730951}, "run.group": {"tf": 1}, "run.deblob": {"tf": 1}, "index": {"tf": 3}}, "df": 4}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"run.add": {"tf": 1.4142135623730951}, "index": {"tf": 3}}, "df": 2}}}, "s": {"docs": {"index": {"tf": 1.7320508075688772}}, "df": 1}}, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"index": {"tf": 1.7320508075688772}}, "df": 1}}}}, "e": {"docs": {"index": {"tf": 2}}, "df": 1}}}}}}}, "t": {"docs": {"index": {"tf": 1.4142135623730951}}, "df": 1}, "r": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {"index": {"tf": 1}}, "df": 1}}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"index": {"tf": 1}}, "df": 1}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"index": {"tf": 3.605551275463989}}, "df": 1, "s": {"docs": {"run.add": {"tf": 1}, "index": {"tf": 3.1622776601683795}}, "df": 2}, "d": {"docs": {"run.add": {"tf": 1.7320508075688772}, "run.group": {"tf": 1}, "index": {"tf": 3.1622776601683795}}, "df": 3}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"index": {"tf": 1.7320508075688772}}, "df": 1}}}, "s": {"docs": {"index": {"tf": 1}}, "df": 1}}}}, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"index": {"tf": 1}}, "df": 1}}}}, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"run.group": {"tf": 1}, "run.deblob": {"tf": 1}, "index": {"tf": 1}}, "df": 3}}}}}}, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"index": {"tf": 1}}, "df": 1, "s": {"docs": {"index": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"index": {"tf": 1}}, "df": 1}}}, "e": {"docs": {"index": {"tf": 1.4142135623730951}}, "df": 1}}}}, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"index": {"tf": 1}}, "df": 1}}}}}, "s": {"docs": {}, "df": 0, "v": {"docs": {"index": {"tf": 2}}, "df": 1}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"index": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {"index": {"tf": 1}}, "df": 1}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "l": {"docs": {"index": {"tf": 1}}, "df": 1}}}, "p": {"docs": {"index": {"tf": 1}}, "df": 1}}, "w": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"run": {"tf": 1}, "run.add": {"tf": 2.23606797749979}, "run.group": {"tf": 1}, "run.deblob": {"tf": 1.4142135623730951}, "index": {"tf": 5.196152422706632}}, "df": 5, "i": {"docs": {}, "df": 0, "n": {"docs": {"index": {"tf": 1}}, "df": 1}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"index": {"tf": 1}}, "df": 1}}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {"run.add": {"tf": 2}}, "df": 1}, "d": {"docs": {"index": {"tf": 1}}, "df": 1, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"run.add": {"tf": 1.4142135623730951}, "index": {"tf": 2}}, "df": 2, "s": {"docs": {"run.add": {"tf": 1}, "index": {"tf": 2.449489742783178}}, "df": 2}}}}}}}}, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"run.add": {"tf": 1.4142135623730951}, "index": {"tf": 2.23606797749979}}, "df": 2}}, "n": {"docs": {"run.add": {"tf": 2}, "index": {"tf": 3.872983346207417}}, "df": 2, "e": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"run.add": {"tf": 1}}, "df": 1}}}}}, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"run.add": {"tf": 1.4142135623730951}, "index": {"tf": 1.7320508075688772}}, "df": 2}}}}}, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"run.add": {"tf": 1.7320508075688772}, "run.group": {"tf": 1}, "index": {"tf": 3.7416573867739413}}, "df": 3}}, "l": {"docs": {}, "df": 0, "e": {"docs": {"index": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {"run.deblob": {"tf": 1}}, "df": 1}}}, "e": {"docs": {"run.add": {"tf": 1.7320508075688772}, "index": {"tf": 1.7320508075688772}}, "df": 2, "r": {"docs": {}, "df": 0, "e": {"docs": {"index": {"tf": 1}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"run.add": {"tf": 1.4142135623730951}, "index": {"tf": 2.449489742783178}}, "df": 2}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"run.add": {"tf": 1.4142135623730951}, "index": {"tf": 1.7320508075688772}}, "df": 2}}}, "e": {"docs": {"index": {"tf": 1.7320508075688772}}, "df": 1, "s": {"docs": {"index": {"tf": 1.7320508075688772}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {"run.add": {"tf": 1}, "run.group": {"tf": 1}, "index": {"tf": 2.23606797749979}}, "df": 3}, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"run.add": {"tf": 1}, "index": {"tf": 1}}, "df": 2}}}}}, "y": {"docs": {"index": {"tf": 1.4142135623730951}}, "df": 1}, "n": {"docs": {}, "df": 0, "t": {"docs": {"index": {"tf": 2.6457513110645907}}, "df": 1}}, "k": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"index": {"tf": 2.449489742783178}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"index": {"tf": 1}}, "df": 1}}}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"index": {"tf": 3}}, "df": 1}}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "f": {"docs": {"index": {"tf": 1.7320508075688772}}, "df": 1, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"run": {"tf": 1}, "run.add": {"tf": 1}, "index": {"tf": 2.449489742783178}}, "df": 3}, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"index": {"tf": 1}}, "df": 1}}}}}}}}}, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"run.add": {"tf": 2.23606797749979}, "run.deblob": {"tf": 1}, "index": {"tf": 2}}, "df": 3}}}}}}}}, "d": {"docs": {"run.deblob": {"tf": 1}}, "df": 1}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"index": {"tf": 1.4142135623730951}}, "df": 1}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"index": {"tf": 1}}, "df": 1}}}, "y": {"docs": {"index": {"tf": 1}}, "df": 1}}}}}}}, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"index": {"tf": 1}}, "df": 1}}}}}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"index": {"tf": 1}}, "df": 1}}}}}}, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"index": {"tf": 1}}, "df": 1}}}}}}}}}}}, "o": {"docs": {"index": {"tf": 2.6457513110645907}}, "df": 1, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"run": {"tf": 1}, "run.add": {"tf": 1}, "index": {"tf": 1.4142135623730951}}, "df": 3}}}}}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"run.add": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {"run.add": {"tf": 1.4142135623730951}, "run.deblob": {"tf": 1}, "index": {"tf": 2}}, "df": 3}}, "w": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"index": {"tf": 1}}, "df": 1}}}}}}, "n": {"docs": {}, "df": 0, "e": {"docs": {"index": {"tf": 1.7320508075688772}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "r": {"docs": {"run.add": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"run.add": {"tf": 1}, "index": {"tf": 1}}, "df": 2}}}}}, "b": {"docs": {}, "df": 0, "e": {"docs": {"run.add": {"tf": 1}}, "df": 1, "s": {"docs": {"run.add": {"tf": 1}}, "df": 1}}}}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"run.add": {"tf": 1}, "index": {"tf": 2.23606797749979}}, "df": 2}}}}}, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "b": {"docs": {"run.add": {"tf": 1}, "index": {"tf": 1.7320508075688772}}, "df": 2, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"index": {"tf": 2.23606797749979}}, "df": 1}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"index": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"run.add": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"run.add": {"tf": 2.23606797749979}, "index": {"tf": 1.4142135623730951}}, "df": 2}}}}}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"index": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"run.add": {"tf": 1}, "index": {"tf": 1.7320508075688772}}, "df": 2}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"index": {"tf": 1}}, "df": 1}}}}}}, "s": {"docs": {"index": {"tf": 1}}, "df": 1}}}}}, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"run.add": {"tf": 1}}, "df": 1, "d": {"docs": {"index": {"tf": 1}}, "df": 1}, "s": {"docs": {"index": {"tf": 1}}, "df": 1}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"run.run": {"tf": 1}}, "df": 1}}}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {"index": {"tf": 1}}, "df": 1}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"index": {"tf": 1}}, "df": 1}}}}}}}}}}}, "r": {"docs": {}, "df": 0, "y": {"docs": {"run.run": {"tf": 1}, "index": {"tf": 1.4142135623730951}}, "df": 2}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"run": {"tf": 1}, "run.add": {"tf": 1.4142135623730951}, "run.run": {"tf": 1}, "index": {"tf": 2.449489742783178}}, "df": 4}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"run.add": {"tf": 1.7320508075688772}, "index": {"tf": 2.6457513110645907}}, "df": 2, "s": {"docs": {"run.add": {"tf": 1.4142135623730951}, "index": {"tf": 2}}, "df": 2}, "[": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"run.add": {"tf": 1}}, "df": 1}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"run.add": {"tf": 1}}, "df": 1}}}}}}}}}, "k": {"docs": {}, "df": 0, "e": {"docs": {"index": {"tf": 2}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"run": {"tf": 1}, "index": {"tf": 1}}, "df": 2}}}}, "o": {"docs": {}, "df": 0, "k": {"docs": {"index": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"index": {"tf": 1}}, "df": 1}}}, "s": {"docs": {"index": {"tf": 1}}, "df": 1}}}, "c": {"docs": {}, "df": 0, "k": {"docs": {"index": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "d": {"docs": {"index": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"run.add": {"tf": 1}, "index": {"tf": 1}}, "df": 2}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {"index": {"tf": 1.4142135623730951}}, "df": 1}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"run.group": {"tf": 1}}, "df": 1}}, "m": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {"index": {"tf": 3.3166247903554}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"index": {"tf": 1}}, "df": 1}}, "f": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"index": {"tf": 1}}, "df": 1}}}}}}}, "s": {"docs": {"index": {"tf": 1}}, "df": 1}}, "s": {"docs": {"index": {"tf": 1.4142135623730951}}, "df": 1, "o": {"docs": {"index": {"tf": 2}}, "df": 1, "m": {"docs": {}, "df": 0, "e": {"docs": {"index": {"tf": 3.3166247903554}}, "df": 1, "w": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"run": {"tf": 1}, "run.add": {"tf": 1}, "index": {"tf": 2}}, "df": 3}}}}, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"run.add": {"tf": 1}, "index": {"tf": 1.7320508075688772}}, "df": 2}}}}}}}, "p": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"index": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"run": {"tf": 1}}, "df": 1}}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"run.add": {"tf": 2.23606797749979}, "run.run": {"tf": 1}, "run.use_cores": {"tf": 1}, "run.section": {"tf": 1}, "run.deblob": {"tf": 1}, "index": {"tf": 3.605551275463989}}, "df": 6}}}, "w": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"index": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {"run.add": {"tf": 1.7320508075688772}, "run.use_cores": {"tf": 1}, "run.group": {"tf": 1}, "index": {"tf": 2}}, "df": 4, "s": {"docs": {"index": {"tf": 1}}, "df": 1}, "u": {"docs": {}, "df": 0, "p": {"docs": {"index": {"tf": 1}}, "df": 1, "s": {"docs": {"index": {"tf": 1}}, "df": 1}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"index": {"tf": 1}}, "df": 1, "s": {"docs": {"index": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"run.add": {"tf": 1}, "index": {"tf": 1}}, "df": 2}}}}}, "e": {"docs": {"run.add": {"tf": 1.7320508075688772}, "index": {"tf": 2.449489742783178}}, "df": 2}, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"run.add": {"tf": 1}, "index": {"tf": 1}}, "df": 2}}}, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"run.section": {"tf": 1}, "index": {"tf": 2.8284271247461903}}, "df": 2}}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"index": {"tf": 2.449489742783178}}, "df": 1, "s": {"docs": {"index": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"index": {"tf": 1.4142135623730951}}, "df": 1, "e": {"docs": {}, "df": 0, "d": {"docs": {"index": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "r": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"index": {"tf": 1}}, "df": 1}}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"index": {"tf": 1}}, "df": 1, "d": {"docs": {"index": {"tf": 1}}, "df": 1}}}}}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {"run.deblob": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"run.add": {"tf": 3.3166247903554}, "run.group": {"tf": 1}, "run.section": {"tf": 1}, "run.deblob": {"tf": 2}, "index": {"tf": 4}}, "df": 5, "s": {"docs": {"run.add": {"tf": 1}, "index": {"tf": 1.4142135623730951}}, "df": 2}}}}, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"index": {"tf": 1}}, "df": 1}}}}}}}, "d": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"run.add": {"tf": 3}, "run.run": {"tf": 1}, "index": {"tf": 8.12403840463596}}, "df": 3}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {"index": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"run.add": {"tf": 3}, "index": {"tf": 1.7320508075688772}}, "df": 2}}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {"index": {"tf": 1}}, "df": 1}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "s": {"docs": {"index": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}, "g": {"docs": {}, "df": 0, "e": {"docs": {"index": {"tf": 1}}, "df": 1}}, "r": {"docs": {}, "df": 0, "t": {"docs": {"index": {"tf": 1}}, "df": 1, "s": {"docs": {"index": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "p": {"docs": {"run.deblob": {"tf": 1}, "index": {"tf": 1}}, "df": 2, "s": {"docs": {"run.deblob": {"tf": 1}, "index": {"tf": 1.7320508075688772}}, "df": 2}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"index": {"tf": 1}}, "df": 1}}}}}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"run.add": {"tf": 1}}, "df": 1, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"index": {"tf": 1}}, "df": 1}}}}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"run.add": {"tf": 1.4142135623730951}, "index": {"tf": 1.4142135623730951}}, "df": 2}, "s": {"docs": {"index": {"tf": 2.23606797749979}}, "df": 1}}}, "y": {"docs": {"index": {"tf": 2.449489742783178}}, "df": 1, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"run.add": {"tf": 1}, "index": {"tf": 1.7320508075688772}}, "df": 2}}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {"run.add": {"tf": 2}, "index": {"tf": 1}}, "df": 2}}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"index": {"tf": 1}}, "df": 1}}}}, "k": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {"run.add": {"tf": 1}, "index": {"tf": 1.7320508075688772}}, "df": 2, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"run.add": {"tf": 1.4142135623730951}, "index": {"tf": 3}}, "df": 2}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"index": {"tf": 2}}, "df": 1}}}}}}}, "u": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"run.add": {"tf": 1}, "index": {"tf": 1}}, "df": 2}}}}}}}}, "c": {"docs": {}, "df": 0, "h": {"docs": {"run.add": {"tf": 1}}, "df": 1}}, "m": {"docs": {"index": {"tf": 3.605551275463989}}, "df": 1}, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"index": {"tf": 1}}, "df": 1}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {"index": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {"run.add": {"tf": 1}, "index": {"tf": 1}}, "df": 2}}}}, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"index": {"tf": 1.4142135623730951}}, "df": 1}}}}, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"index": {"tf": 1.7320508075688772}}, "df": 1}}}}, "x": {"docs": {"index": {"tf": 1.4142135623730951}}, "df": 1}}, "a": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"index": {"tf": 1}}, "df": 1}}}, "m": {"docs": {}, "df": 0, "e": {"docs": {"index": {"tf": 3.3166247903554}}, "df": 1}}}, "c": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {"index": {"tf": 3.605551275463989}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {"index": {"tf": 1}}, "df": 1}}}}}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"index": {"tf": 2.449489742783178}}, "df": 1}}}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {"index": {"tf": 1.7320508075688772}}, "df": 1, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"index": {"tf": 3}}, "df": 1}}}}}}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {"run": {"tf": 1}}, "df": 1}}}}}, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {"run.add": {"tf": 1.4142135623730951}, "run.deblob": {"tf": 1}, "index": {"tf": 2}}, "df": 3, "s": {"docs": {"index": {"tf": 3}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "d": {"docs": {"run.add": {"tf": 1}, "index": {"tf": 1}}, "df": 2}}}}, "i": {"docs": {}, "df": 0, "a": {"docs": {"index": {"tf": 1.4142135623730951}}, "df": 1}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"index": {"tf": 1}}, "df": 1}}}}, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "w": {"docs": {"run.add": {"tf": 1}}, "df": 1}, "e": {"docs": {}, "df": 0, "d": {"docs": {"run.add": {"tf": 1.4142135623730951}, "index": {"tf": 1.4142135623730951}}, "df": 2}}, "x": {"docs": {}, "df": 0, "t": {"docs": {"index": {"tf": 2}}, "df": 1}}, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"index": {"tf": 1}}, "df": 1}}}}}}}}, "o": {"docs": {"index": {"tf": 1.7320508075688772}}, "df": 1, "t": {"docs": {"run.add": {"tf": 2}, "run.run": {"tf": 1}, "run.deblob": {"tf": 1}, "index": {"tf": 4.69041575982343}}, "df": 4, "e": {"docs": {"run.add": {"tf": 1}, "index": {"tf": 3.4641016151377544}}, "df": 2}}, "n": {"docs": {"index": {"tf": 1}}, "df": 1, "e": {"docs": {"run.add": {"tf": 1}, "index": {"tf": 1}}, "df": 2, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"index": {"tf": 1}}, "df": 1}}}}}}}}}, "w": {"docs": {"index": {"tf": 1}}, "df": 1}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"1": {"docs": {"index": {"tf": 1.4142135623730951}}, "df": 1}, "2": {"docs": {"index": {"tf": 1.4142135623730951}}, "df": 1}, "docs": {"run.add": {"tf": 2.23606797749979}, "run.group": {"tf": 1.4142135623730951}, "index": {"tf": 3.872983346207417}}, "df": 3, "d": {"docs": {"run.deblob": {"tf": 1}}, "df": 1}, "s": {"docs": {"index": {"tf": 2}}, "df": 1}}}, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"index": {"tf": 1}}, "df": 1}}}}}}, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"run.use_cores": {"tf": 1.4142135623730951}}, "df": 1, "s": {"docs": {"index": {"tf": 1}}, "df": 1}}}}}}, "r": {"docs": {"run.use_cores": {"tf": 1}, "index": {"tf": 1}}, "df": 2}}, "b": {"docs": {"index": {"tf": 7.54983443527075}}, "df": 1, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"run.add": {"tf": 1}, "index": {"tf": 2}}, "df": 2}}, "i": {"docs": {}, "df": 0, "c": {"docs": {"index": {"tf": 1}}, "df": 1, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"run.add": {"tf": 1}}, "df": 1}}}}}}}}, "y": {"docs": {"run.add": {"tf": 2.6457513110645907}, "run.deblob": {"tf": 1}, "index": {"tf": 4.795831523312719}}, "df": 3}, "e": {"docs": {"run.add": {"tf": 3}, "run.use_cores": {"tf": 1}, "run.section": {"tf": 1}, "run.deblob": {"tf": 1.4142135623730951}, "index": {"tf": 4.69041575982343}}, "df": 5, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"run.add": {"tf": 2}, "index": {"tf": 3.3166247903554}}, "df": 2}}}}, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"run.add": {"tf": 1}, "index": {"tf": 1}}, "df": 2}}}}}}}, "t": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"index": {"tf": 1.4142135623730951}}, "df": 1}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"index": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"index": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"index": {"tf": 1}}, "df": 1}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {"index": {"tf": 1.4142135623730951}}, "df": 1}}}, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"index": {"tf": 1.7320508075688772}}, "df": 1}}}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {"index": {"tf": 1.4142135623730951}}, "df": 1}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"index": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "b": {"docs": {"run.add": {"tf": 4.47213595499958}, "run.deblob": {"tf": 2.6457513110645907}, "index": {"tf": 4.58257569495584}}, "df": 3, "s": {"docs": {"run.add": {"tf": 1}, "index": {"tf": 3.605551275463989}}, "df": 2}}}}, "u": {"docs": {}, "df": 0, "t": {"docs": {"run.add": {"tf": 1}, "run.run": {"tf": 1}, "run.deblob": {"tf": 1}, "index": {"tf": 2.6457513110645907}}, "df": 4}, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"index": {"tf": 1.4142135623730951}}, "df": 1}}}}, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"index": {"tf": 2.449489742783178}}, "df": 1}}}}, "g": {"docs": {"index": {"tf": 3.1622776601683795}}, "df": 1, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"index": {"tf": 1.7320508075688772}}, "df": 1, "d": {"docs": {"run.add": {"tf": 1.4142135623730951}, "index": {"tf": 1.4142135623730951}}, "df": 2}, "s": {"docs": {"index": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"index": {"tf": 1}}, "df": 1}}}}}}}}, "t": {"docs": {"index": {"tf": 1}}, "df": 1, "s": {"docs": {"run.add": {"tf": 1}, "index": {"tf": 1.4142135623730951}}, "df": 2}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "p": {"docs": {"run.add": {"tf": 1}, "run.group": {"tf": 2}, "index": {"tf": 3.4641016151377544}}, "df": 3, "e": {"docs": {}, "df": 0, "d": {"docs": {"index": {"tf": 1}}, "df": 1}}, "s": {"docs": {"index": {"tf": 1.4142135623730951}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"index": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"run.add": {"tf": 1}, "index": {"tf": 1}}, "df": 2}, "n": {"docs": {"run.add": {"tf": 1.4142135623730951}, "run.run": {"tf": 1}, "index": {"tf": 2.23606797749979}}, "df": 3}}}}, "o": {"docs": {"index": {"tf": 1.4142135623730951}}, "df": 1, "o": {"docs": {}, "df": 0, "d": {"docs": {"index": {"tf": 1}}, "df": 1}}}, "t": {"docs": {"index": {"tf": 3}}, "df": 1}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "b": {"docs": {"index": {"tf": 2.6457513110645907}}, "df": 1}}}}, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {"run.add": {"tf": 1.4142135623730951}, "run.deblob": {"tf": 1}, "index": {"tf": 1}}, "df": 3}, "v": {"docs": {}, "df": 0, "e": {"docs": {"run.add": {"tf": 1}, "index": {"tf": 4}}, "df": 2}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"index": {"tf": 1}}, "df": 1}}}}, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"index": {"tf": 1}}, "df": 1}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"index": {"tf": 1}}, "df": 1}}}}}}, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"index": {"tf": 1}}, "df": 1, "s": {"docs": {"index": {"tf": 1}}, "df": 1}}}}}, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "y": {"docs": {"index": {"tf": 1}}, "df": 1}}}}, "o": {"docs": {}, "df": 0, "w": {"docs": {"run.add": {"tf": 1.4142135623730951}, "index": {"tf": 2.449489742783178}}, "df": 2}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"run.add": {"tf": 3}, "index": {"tf": 5}}, "df": 2, "s": {"docs": {"index": {"tf": 1}}, "df": 1}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"index": {"tf": 1}}, "df": 1}}}}}}}, "l": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {"index": {"tf": 1.4142135623730951}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {"index": {"tf": 1}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {"index": {"tf": 2}}, "df": 1}}}, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {"index": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"index": {"tf": 1}}, "df": 1}, "e": {"docs": {}, "df": 0, "d": {"docs": {"index": {"tf": 1}}, "df": 1}}}}}}}}}}}, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "y": {"docs": {"run.add": {"tf": 1.4142135623730951}, "run.deblob": {"tf": 1.7320508075688772}, "index": {"tf": 1}}, "df": 3, "w": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"index": {"tf": 1}}, "df": 1}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"run.add": {"tf": 1}, "index": {"tf": 1.4142135623730951}}, "df": 2}}}, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {"index": {"tf": 1}}, "df": 1, "s": {"docs": {"index": {"tf": 1}}, "df": 1}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"index": {"tf": 1}}, "df": 1}}}}}}}}}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"run.add": {"tf": 1}, "run.deblob": {"tf": 1}, "index": {"tf": 4.123105625617661}}, "df": 3, "d": {"docs": {"run.add": {"tf": 1.4142135623730951}, "run.use_cores": {"tf": 1.4142135623730951}, "index": {"tf": 2.23606797749979}}, "df": 3}, "f": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {"run.deblob": {"tf": 1}, "index": {"tf": 1.7320508075688772}}, "df": 2}}}, "s": {"docs": {"index": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"run.add": {"tf": 1}, "run.deblob": {"tf": 1}, "index": {"tf": 3.7416573867739413}}, "df": 3}}}, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"index": {"tf": 1.7320508075688772}}, "df": 1}}, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"index": {"tf": 1}}, "df": 1}}}}}, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"run.add": {"tf": 1}}, "df": 1}}}}}}}}}, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {"run.add": {"tf": 1}}, "df": 1}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"run.deblob": {"tf": 1}}, "df": 1}}}}}}}}}}}, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"index": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"index": {"tf": 1}}, "df": 1}}}}}}}}, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"index": {"tf": 1}}, "df": 1}}}}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"index": {"tf": 1}}, "df": 1}}}}}}}}}, "p": {"docs": {"index": {"tf": 2.449489742783178}}, "df": 1}}, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"run.add": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"run.add": {"tf": 1.7320508075688772}, "run.run": {"tf": 1}, "run.deblob": {"tf": 1}, "index": {"tf": 4.795831523312719}}, "df": 4, "s": {"docs": {"run.add": {"tf": 1}, "run.use_cores": {"tf": 1}, "run.group": {"tf": 1}, "run.section": {"tf": 1}, "run.deblob": {"tf": 1}, "index": {"tf": 2.449489742783178}}, "df": 6}}}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"index": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"index": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}}}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"index": {"tf": 1}}, "df": 1}}}}}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"index": {"tf": 1}}, "df": 1}}}}, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {"run.deblob": {"tf": 1.4142135623730951}, "index": {"tf": 1}}, "df": 2}}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {"index": {"tf": 1}}, "df": 1, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {"index": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"run.add": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"index": {"tf": 1}}, "df": 1}}}}}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"run.section": {"tf": 1}, "index": {"tf": 1}}, "df": 2, "e": {"docs": {}, "df": 0, "d": {"docs": {"run.add": {"tf": 1}, "run.run": {"tf": 1}, "run.section": {"tf": 1}, "index": {"tf": 1.7320508075688772}}, "df": 4}}, "s": {"docs": {"index": {"tf": 1}}, "df": 1}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"index": {"tf": 1}}, "df": 1}}}}}}, "e": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {"index": {"tf": 1.7320508075688772}}, "df": 1, "l": {"docs": {}, "df": 0, "y": {"docs": {"run.run": {"tf": 1}}, "df": 1}}}}}}}, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"index": {"tf": 1}}, "df": 1}}}}, "o": {"docs": {}, "df": 0, "d": {"docs": {"index": {"tf": 1.7320508075688772}}, "df": 1, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"index": {"tf": 1}}, "df": 1, "d": {"docs": {"index": {"tf": 1}}, "df": 1}, "s": {"docs": {"index": {"tf": 1.4142135623730951}}, "df": 1}}, "t": {"docs": {"index": {"tf": 1}}, "df": 1, "s": {"docs": {"index": {"tf": 1}}, "df": 1}}}}}, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"index": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {}, "df": 0, "s": {"docs": {"index": {"tf": 1}}, "df": 1}}}}, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"index": {"tf": 2}}, "df": 1}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"index": {"tf": 1}}, "df": 1}}}}}}, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"index": {"tf": 1.7320508075688772}}, "df": 1}}}}}}}, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"index": {"tf": 1.4142135623730951}}, "df": 1, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"index": {"tf": 1.7320508075688772}}, "df": 1}}}}}}}}}}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"index": {"tf": 1}}, "df": 1}}}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "y": {"docs": {"index": {"tf": 1.7320508075688772}}, "df": 1}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"index": {"tf": 1}}, "df": 1}}}}}}}}}}, "y": {"docs": {"index": {"tf": 2.449489742783178}}, "df": 1, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"index": {"tf": 2.23606797749979}}, "df": 1}}}}}}, "y": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {"run.run": {"tf": 1}, "index": {"tf": 6.244997998398398}}, "df": 2, "r": {"docs": {"index": {"tf": 3}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {"index": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {"index": {"tf": 1}}, "df": 1}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {"index": {"tf": 13.892443989449804}}, "df": 1, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"index": {"tf": 1}}, "df": 1}}}}}}}}}, "j": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"index": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}, "pipeline": ["trimmer"], "_isPrebuiltIndex": true};

    // mirrored in build-search-index.js (part 1)
    // Also split on html tags. this is a cheap heuristic, but good enough.
    elasticlunr.tokenizer.setSeperator(/[\s\-.;&_'"=,()]+|<[^>]*>/);

    let searchIndex;
    if (docs._isPrebuiltIndex) {
        console.info("using precompiled search index");
        searchIndex = elasticlunr.Index.load(docs);
    } else {
        console.time("building search index");
        // mirrored in build-search-index.js (part 2)
        searchIndex = elasticlunr(function () {
            this.pipeline.remove(elasticlunr.stemmer);
            this.pipeline.remove(elasticlunr.stopWordFilter);
            this.addField("qualname");
            this.addField("fullname");
            this.addField("annotation");
            this.addField("default_value");
            this.addField("signature");
            this.addField("bases");
            this.addField("doc");
            this.setRef("fullname");
        });
        for (let doc of docs) {
            searchIndex.addDoc(doc);
        }
        console.timeEnd("building search index");
    }

    return (term) => searchIndex.search(term, {
        fields: {
            qualname: {boost: 4},
            fullname: {boost: 2},
            annotation: {boost: 2},
            default_value: {boost: 2},
            signature: {boost: 2},
            bases: {boost: 2},
            doc: {boost: 1},
        },
        expand: true
    });
})();